const tasks = [{
  id: 1,
  emoji: '0Ô∏è‚É£',
  description: '–ù–∞–ø–∏—à–∏—Ç–µ —É—Å–ª–æ–≤–∏–µ –∫–æ—Ç–æ—Ä–æ–µ –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç –≤ –∫–æ–Ω—Å–æ–ª—å —á–∏—Å–ª–∞ –º–µ–Ω—å—à–µ —á–µ–º 0.5 –∏—Å–ø–æ–ª—å–∑—É—è –æ–ø–µ—Ä–∞—Ç–æ—Ä <selection>></selection> ‚Äî –ë–æ–ª—å—à–µ. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—é: <selection>console.log(number)</selection> —á—Ç–æ–±—ã –≤—ã–≤–µ—Å—Ç–∏ –≤ –∫–æ–Ω—Å–æ–ª—å.',
  defaultCodeFunction: () => {
    const number = Math.random().toFixed(3)
    return {
      varData: {
        number
      },
      code: `
        var number = ${number};
      `
    }
  },
  testedCodeFunction: (varData, number) => (varData.number > 0.5) && (number > 0.5),
  confirm: false
}, {
  id: 2,
  emoji: '‚úèÔ∏è',
  description: '–ù–∞–ø–∏—à–∏—Ç–µ —É—Å–ª–æ–≤–∏–µ –∫–æ—Ç–æ—Ä–æ–µ –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç –≤ –∫–æ–Ω—Å–æ–ª—å –Ω–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∏–º–µ–Ω –∏—Å–ø–æ–ª—å–∑—É—è –æ–ø–µ—Ä–∞—Ç–æ—Ä <selection>!=</selection> ‚Äî –Ω–µ —Ä–∞–≤–µ–Ω—Å—Ç–≤–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—é: <selection>console.log(name)</selection> —á—Ç–æ–±—ã –≤—ã–≤–µ—Å—Ç–∏ –≤ –∫–æ–Ω—Å–æ–ª—å.',
  defaultCodeFunction: () => {
    const names = ['Anton', '', '', '', '', '', 'Gena', 'Stas', 'Anna', 'Dasha', 'Irina', 'Evgeniy', 'Igor']

    const name = names[parseInt(Math.random() * names.length)]

    return {
      varData: {
        name
      },
      code: `
        var name = "${name}";
      `
    }
  },
  testedCodeFunction: (varData, name) => varData.name === name && name !== '',
  confirm: false
}, {
  id: 3,
  emoji: 'üîû',
  description: '–ù–∞–ø–∏—à–∏—Ç–µ —É—Å–ª–æ–≤–∏–µ –∫–æ—Ç–æ—Ä–æ–µ –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç –≤ –∫–æ–Ω—Å–æ–ª—å –ª—é–¥–µ–π –º–ª–∞–¥—à–µ 18 –∏ –±–µ–∑ –∏–º–µ–Ω–∏ –∏—Å–ø–æ–ª—å–∑—É—è –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã <selection>></selection> ‚Äî –ë–æ–ª—å—à–µ <selection>!=</selection> ‚Äî –Ω–µ —Ä–∞–≤–µ–Ω—Å—Ç–≤–æ –∏ –ª–æ–≥–∏—á–µ—Å–∫–∏–π –æ–ø—Ä–µ–∞—Ç–æ—Ä <selection>&&</selection> ‚Äî –ò. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—é: <selection>console.log(name, age)</selection> —á—Ç–æ–±—ã –≤—ã–≤–µ—Å—Ç–∏ –≤ –∫–æ–Ω—Å–æ–ª—å.',
  defaultCodeFunction: () => {
    const names = ['Anton', '', '', '', '', '', 'Gena', 'Stas', 'Anna', 'Dasha', 'Irina', 'Evgeniy', 'Igor']
    const ages = Array(20).fill(0).map((_, key) => key + 16)

    const name = names[parseInt(Math.random() * names.length)]
    const age = ages[parseInt(Math.random() * ages.length)]

    return {
      varData: {
        name,
        age
      },
      code: `
        var name = "${name}";
        var age = ${age};
      `
    }
  },
  testedCodeFunction: (varData, name, age) => (varData.name !== '' && varData.age > 18) && (name !== '' && age > 18),
  confirm: false
}, {
  id: 4,
  emoji: '‚ûï',
  description: '–ù–∞–ø–∏—à–∏—Ç–µ —É—Å–ª–æ–≤–∏–µ –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –≤—ã–≤–æ–¥–∏—Ç—å —Ç–æ–ª—å–∫–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å–ª–æ–∂–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É—è –æ–ø–µ—Ä–∞—Ç–æ—Ä <selection>==</selection> ‚Äî —Ä–∞–≤–µ–Ω—Å—Ç–≤–æ. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—é: <selection>console.log(a + b)</selection> —á—Ç–æ–±—ã –≤—ã–≤–µ—Å—Ç–∏ –≤ –∫–æ–Ω—Å–æ–ª—å.',
  defaultCodeFunction: () => {
    const symbols = ['+', '-', '/', '*', '%']
    const as = Array(200).fill(0).map((_, key) => key - 100)
    const bs = Array(200).fill(0).map((_, key) => key - 100)

    const symbol = symbols[parseInt(Math.random() * symbols.length)]
    const b = bs[parseInt(Math.random() * bs.length)]
    const a = as[parseInt(Math.random() * as.length)]

    return {
      varData: {
        a,
        b,
        symbol
      },
      code: `
        var a = ${a};
        var b = ${b};
        var symbol = "${symbol}";
      `
    }
  },
  testedCodeFunction: (varData, sum) => varData.a + varData.b === sum && varData.symbol === '+',
  confirm: false
}, {
  id: 5,
  emoji: 'üì¨',
  description: '–ù–∞–ø–∏—à–∏—Ç–µ —É—Å–ª–æ–≤–∏–µ –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –≤—ã–≤–æ–¥–∏—Ç—å —Ç–æ–ª—å–∫–æ –ø–æ—á—Ç–æ–≤—ã–µ —è—â–∏–∫–∏ –≤ –∫–æ–Ω—Å–æ–ª—å, –∫–∞–∂–¥—ã–π –ø–æ—á—Ç–æ–≤—ã–π —è—â–∏–∫ –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å <selection>@</selection>. –ò—Å–ø–æ–ª—å–∑—É—è –º–µ—Ç–æ–¥ <selection>match</selection> ‚Äî —Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—é: <selection>console.log(email)</selection> —á—Ç–æ–±—ã –≤—ã–≤–µ—Å—Ç–∏ –≤ –∫–æ–Ω—Å–æ–ª—å.',
  defaultCodeFunction: () => {
    const emails = ['prohetamine@yandex.ru', 'lolikekdev@gmail.com', 'AlexPetrowIvanov@mail.ru', 'Misha Jol', 'Piter Pen', 'maksim1488', 'vlad1992@site.org', '982322', 'rine1', '3', '-_____-', '777badman777.com', 'qwerty527$mail.ru']

    const email = emails[parseInt(Math.random() * emails.length)]

    return {
      varData: {
        email
      },
      code: `
        var email = "${email}";
      `
    }
  },
  testedCodeFunction: (varData, email) => !!varData.email.match(/@/) && !!email.match(/@/),
  confirm: false
}, {
  id: 6,
  emoji: '‚ûó',
  description: '–ù–∞–ø–∏—à–∏—Ç–µ —É—Å–ª–æ–≤–∏–µ –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –≤—ã–≤–æ–¥–∏—Ç—å —Ç–æ–ª—å–∫–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–µ–ª–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É—è –æ–ø–µ—Ä–∞—Ç–æ—Ä <selection>==</selection> ‚Äî —Ä–∞–≤–µ–Ω—Å—Ç–≤–æ. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—é: <selection>console.log(a / b)</selection> —á—Ç–æ–±—ã –≤—ã–≤–µ—Å—Ç–∏ –≤ –∫–æ–Ω—Å–æ–ª—å.',
  defaultCodeFunction: () => {
    const symbols = ['+', '-', '/', '*', '%']
    const as = Array(20).fill(0).map((_, key) => key - 10)
    const bs = Array(20).fill(0).map((_, key) => key)

    const symbol = symbols[parseInt(Math.random() * symbols.length)]
    const b = bs[parseInt(Math.random() * bs.length)]
    const a = as[parseInt(Math.random() * as.length)]

    return {
      varData: {
        a,
        b,
        symbol
      },
      code: `
        var a = ${a};
        var b = ${b};
        var symbol = "${symbol}";
      `
    }
  },
  testedCodeFunction: (varData, sum) => varData.a / varData.b === sum && varData.symbol === '/',
  confirm: false
}, {
  id: 7,
  emoji: 'üìù',
  description: '–ù–∞–ø–∏—à–∏—Ç–µ —É—Å–ª–æ–≤–∏–µ –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –≤—ã–≤–æ–¥–∏—Ç—å —Å–ª–æ–≤–∞ –¥–ª–∏–Ω–æ–π –±–æ–ª—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ 5 —Å–∏–º–≤–æ–ª–æ–≤. –ò—Å–ø–æ–ª—å–∑—É—è –æ–ø—Ä–µ–∞—Ç–æ—Ä <selection>>=</selection> ‚Äî –±–æ–ª—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ –∏ –º–µ—Ç–æ–¥ <selection>length</selection> ‚Äî –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ä–∞–∑–º–µ—Ä —Å—Ç—Ä–æ–∫–∏. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—é: <selection>console.log(word)</selection> —á—Ç–æ–±—ã –≤—ã–≤–µ—Å—Ç–∏ –≤ –∫–æ–Ω—Å–æ–ª—å.',
  defaultCodeFunction: () => {
    const words = `–£ –ª—É–∫–æ–º–æ—Ä—å—è –¥—É–± –∑–µ–ª—ë–Ω—ã–π –ó–ª–∞—Ç–∞—è —Ü–µ–ø—å –Ω–∞ –¥—É–±–µ —Ç–æ–º –ò –¥–Ω—ë–º –∏ –Ω–æ—á—å—é –∫–æ—Ç —É—á—ë–Ω—ã–π –í—Å—ë —Ö–æ–¥–∏—Ç –ø–æ —Ü–µ–ø–∏ –∫—Ä—É–≥–æ–º –ò–¥—ë—Ç –Ω–∞–ø—Ä–∞–≤–æ  –ø–µ—Å–Ω—å –∑–∞–≤–æ–¥–∏—Ç –ù–∞–ª–µ–≤–æ  —Å–∫–∞–∑–∫—É –≥–æ–≤–æ—Ä–∏—Ç –¢–∞–º —á—É–¥–µ—Å–∞ —Ç–∞–º –ª–µ—à–∏–π –±—Ä–æ–¥–∏—Ç –†—É—Å–∞–ª–∫–∞ –Ω–∞ –≤–µ—Ç–≤—è—Ö —Å–∏–¥–∏—Ç –¢–∞–º –Ω–∞ –Ω–µ–≤–µ–¥–æ–º—ã—Ö –¥–æ—Ä–æ–∂–∫–∞—Ö –°–ª–µ–¥—ã –Ω–µ–≤–∏–¥–∞–Ω–Ω—ã—Ö –∑–≤–µ—Ä–µ–π –ò–∑–±—É—à–∫–∞ —Ç–∞–º –Ω–∞ –∫—É—Ä—å–∏—Ö –Ω–æ–∂–∫–∞—Ö –°—Ç–æ–∏—Ç –±–µ–∑ –æ–∫–æ–Ω –±–µ–∑ –¥–≤–µ—Ä–µ–π –¢–∞–º –ª–µ—Å –∏ –¥–æ–ª –≤–∏–¥–µ–Ω–∏–π –ø–æ–ª–Ω—ã –¢–∞–º –æ –∑–∞—Ä–µ –ø—Ä–∏—Ö–ª—ã–Ω—É—Ç –≤–æ–ª–Ω—ã –ù–∞ –±—Ä–µ–≥ –ø–µ—Å—á–∞–Ω—ã–π –∏ –ø—É—Å—Ç–æ–π –ò —Ç—Ä–∏–¥—Ü–∞—Ç—å –≤–∏—Ç—è–∑–µ–π –ø—Ä–µ–∫—Ä–∞—Å–Ω—ã—Ö –ß—Ä–µ–¥–æ–π –∏–∑ –≤–æ–¥ –≤—ã—Ö–æ–¥—è—Ç —è—Å–Ω—ã—Ö –ò —Å –Ω–∏–º–∏ –¥—è–¥—å–∫–∞ –∏—Ö –º–æ—Ä—Å–∫–æ–π –¢–∞–º –∫–æ—Ä–æ–ª–µ–≤–∏—á –º–∏–º–æ—Ö–æ–¥–æ–º –ü–ª–µ–Ω—è–µ—Ç –≥—Ä–æ–∑–Ω–æ–≥–æ —Ü–∞—Ä—è –¢–∞–º –≤ –æ–±–ª–∞–∫–∞—Ö –ø–µ—Ä–µ–¥ –Ω–∞—Ä–æ–¥–æ–º –ß–µ—Ä–µ–∑ –ª–µ—Å–∞ —á–µ—Ä–µ–∑ –º–æ—Ä—è –ö–æ–ª–¥—É–Ω –Ω–µ—Å—ë—Ç –±–æ–≥–∞—Ç—ã—Ä—è –í —Ç–µ–º–Ω–∏—Ü–µ —Ç–∞–º —Ü–∞—Ä–µ–≤–Ω–∞ —Ç—É–∂–∏—Ç –ê –±—É—Ä—ã–π –≤–æ–ª–∫ –µ–π –≤–µ—Ä–Ω–æ —Å–ª—É–∂–∏—Ç –¢–∞–º —Å—Ç—É–ø–∞ —Å –ë–∞–±–æ—é –Ø–≥–æ–π –ò–¥—ë—Ç –±—Ä–µ–¥—ë—Ç —Å–∞–º–∞ —Å–æ–±–æ–π –¢–∞–º —Ü–∞—Ä—å –ö–∞—â–µ–π –Ω–∞–¥ –∑–ª–∞—Ç–æ–º —á–∞—Ö–Ω–µ—Ç –¢–∞–º —Ä—É—Å—Å–∫–∏–π –¥—É—Ö —Ç–∞–º –†—É—Å—å—é –ø–∞—Ö–Ω–µ—Ç –ò —Ç–∞–º —è –±—ã–ª –∏ –º—ë–¥ —è –ø–∏–ª –£ –º–æ—Ä—è –≤–∏–¥–µ–ª –¥—É–± –∑–µ–ª—ë–Ω—ã–π –ü–æ–¥ –Ω–∏–º —Å–∏–¥–µ–ª –∏ –∫–æ—Ç —É—á—ë–Ω—ã–π –°–≤–æ–∏ –º–Ω–µ —Å–∫–∞–∑–∫–∏ –≥–æ–≤–æ—Ä–∏–ª`.split(' ')

    const word = words[parseInt(Math.random() * words.length)]

    return {
      varData: {
        word
      },
      code: `
        var word = "${word}";
      `
    }
  },
  testedCodeFunction: (varData, word) => varData.word.length >= 5 && word.length >= 5,
  confirm: false
}, {
  id: 8,
  emoji: '‚úñÔ∏è',
  description: '–ù–∞–ø–∏—à–∏—Ç–µ —É—Å–ª–æ–≤–∏–µ –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –≤—ã–≤–æ–¥–∏—Ç—å —Ç–æ–ª—å–∫–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç —É–º–Ω–æ–∂–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É—è –æ–ø–µ—Ä–∞—Ç–æ—Ä <selection>==</selection> ‚Äî —Ä–∞–≤–µ–Ω—Å—Ç–≤–æ. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—é: <selection>console.log(a * b)</selection> —á—Ç–æ–±—ã –≤—ã–≤–µ—Å—Ç–∏ –≤ –∫–æ–Ω—Å–æ–ª—å.',
  defaultCodeFunction: () => {
    const symbols = ['+', '-', '/', '*', '%']
    const as = Array(20).fill(0).map((_, key) => key - 10)
    const bs = Array(20).fill(0).map((_, key) => key)

    const symbol = symbols[parseInt(Math.random() * symbols.length)]
    const b = bs[parseInt(Math.random() * bs.length)]
    const a = as[parseInt(Math.random() * as.length)]

    return {
      varData: {
        a,
        b,
        symbol
      },
      code: `
        var a = ${a};
        var b = ${b};
        var symbol = "${symbol}";
      `
    }
  },
  testedCodeFunction: (varData, sum) => varData.a * varData.b === sum && varData.symbol === '*',
  confirm: false
}, {
  id: 9,
  emoji: '‚ûñ',
  description: '–ù–∞–ø–∏—à–∏—Ç–µ —É—Å–ª–æ–≤–∏–µ –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –≤—ã–≤–æ–¥–∏—Ç—å —Ç–æ–ª—å–∫–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã—á–∏—Ç–∞–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É—è –æ–ø–µ—Ä–∞—Ç–æ—Ä <selection>==</selection> ‚Äî —Ä–∞–≤–µ–Ω—Å—Ç–≤–æ. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—é: <selection>console.log(a - b)</selection> —á—Ç–æ–±—ã –≤—ã–≤–µ—Å—Ç–∏ –≤ –∫–æ–Ω—Å–æ–ª—å.',
  defaultCodeFunction: () => {
    const symbols = ['+', '-', '/', '*', '%']
    const as = Array(20).fill(0).map((_, key) => key - 10)
    const bs = Array(20).fill(0).map((_, key) => key)

    const symbol = symbols[parseInt(Math.random() * symbols.length)]
    const b = bs[parseInt(Math.random() * bs.length)]
    const a = as[parseInt(Math.random() * as.length)]

    return {
      varData: {
        a,
        b,
        symbol
      },
      code: `
        var a = ${a};
        var b = ${b};
        var symbol = "${symbol}";
      `
    }
  },
  testedCodeFunction: (varData, sum) => varData.a - varData.b === sum && varData.symbol === '-',
  confirm: false
}, {
  id: 10,
  emoji: 'üö´',
  description: '–ù–∞–ø–∏—à–∏—Ç–µ —É—Å–ª–æ–≤–∏–µ –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –≤—ã–≤–æ–¥–∏—Ç—å —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã. –ò—Å–ø–æ–ª—å–∑—É—è –æ–ø–µ—Ä–∞—Ç–æ—Ä <selection>==</selection> ‚Äî —Ä–∞–≤–µ–Ω—Å—Ç–≤–æ –∏ —Ñ—É–Ω–∫—Ü–∏—é <selection>typeof</selection> ‚Äî –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—é: <selection>console.log(number)</selection> —á—Ç–æ–±—ã –≤—ã–≤–µ—Å—Ç–∏ –≤ –∫–æ–Ω—Å–æ–ª—å.',
  defaultCodeFunction: () => {
    const numbers = [1,2,44,50,32,7,9, ...(`–ß–µ–º—É —Ä–∞–≤–Ω–æ —á–∏—Å–ª–æ –ø–∏? –í –ø—Ä–æ—Å—Ç—ã—Ö —Å–ª—É—á–∞—è—Ö —Ö–≤–∞—Ç–∞–µ—Ç –∑–Ω–∞—Ç—å –ø–µ—Ä–≤—ã–µ 3 –∑–Ω–∞–∫–∞ (3,14). –ù–æ –¥–ª—è –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω—ã—Ö —Å–ª—É—á–∞–µ–≤ –∏ —Ç–∞–º, –≥–¥–µ –Ω—É–∂–Ω–∞ –±–û–ª—å—à–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ, —á–µ–º 3 —Ü–∏—Ñ—Ä—ã.`.split(' '))]

    const number = numbers[parseInt(Math.random() * numbers.length)]

    return {
      varData: {
        number
      },
      code: `
        var number = ${typeof(number) === 'number' ? `${number}`: `"${number}"`};
      `
    }
  },
  testedCodeFunction: (varData, number) => typeof(varData.number) === 'number' && number === varData.number,
  confirm: false
}, {
  id: 11,
  emoji: 'üíé',
  description: '–ù–∞–ø–∏—à–∏—Ç–µ —É—Å–ª–æ–≤–∏–µ –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –ø—Ä–æ–ø—É—Å–∫–∞—Ç—å —Ç–æ–ª—å–∫–æ true. –ò—Å–ø–æ–ª—å–∑—É—è –æ–ø–µ—Ä–∞—Ç–æ—Ä <selection>===</selection> ‚Äî —Å—Ç—Ä–æ–≥–æ–µ —Ä–∞–≤–µ–Ω—Å—Ç–≤–æ. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—é: <selection>console.log(data)</selection> —á—Ç–æ–±—ã –≤—ã–≤–µ—Å—Ç–∏ –≤ –∫–æ–Ω—Å–æ–ª—å.',
  defaultCodeFunction: () => {
    const isOks = ["true", true, true, true, "false", false, 0, 1, "", "–∏—Å—Ç–∏–Ω–∞"]

    const isOk = isOks[parseInt(Math.random() * isOks.length)]

    return {
      varData: {
        isOk
      },
      code: `
        var isOk = ${typeof(isOk) === 'string' ? `"${isOk}"`: `${isOk}`};
      `
    }
  },
  testedCodeFunction: (varData, isOk) => varData.isOk === true && isOk === true,
  confirm: false
}, {
  id: 12,
  emoji: 'ü¶†',
  description: '–ù–∞–ø–∏—à–∏—Ç–µ —É—Å–ª–æ–≤–∏–µ –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –ø—Ä–æ–ø—É—Å–∫–∞—Ç—å —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –∫–æ—Ä–æ–Ω–æ–≤–∏—Ä—É—Å–æ–º, –∏–∑–±–µ—Ä–≥–∞–π—Ç–µ —Å–ª–æ–≤–∞ –Ω–∞—á–∏–Ω–∞—é–∏—â–µ—Å—è –Ω–∞ <selection>–∫–æ—Ä–æ–Ω–∞–≤–∏</selection> –∏ <selection>COVID-19</selection>. –∏—Å–ø–æ–ª—å–∑—É—è –º–µ—Ç–æ–¥ <selection>match</selection> ‚Äî —Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è –∏ –ª–æ–≥–∏—á–µ—Å–∫–∏–π –æ–ø–µ—Ä–∞—Ç–æ—Ä <selection>!</selection> ‚Äî –æ—Ç—Ä–∏—Ü–∞–Ω–∏–µ. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—é: <selection>console.log(word)</selection> —á—Ç–æ–±—ã –≤—ã–≤–µ—Å—Ç–∏ –≤ –∫–æ–Ω—Å–æ–ª—å.',
  defaultCodeFunction: () => {
    const words = '–ö–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å COVID-19–°–∏–º–ø—Ç–æ–º—ã –∫–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å–∞ COVID-19 –°–∏–º–ø—Ç–æ–º—ã –∫–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å–∞ COVID-19 –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Ç–∞—Ç—å–∏ –°–∏–º–ø—Ç–æ–º—ã –°–ø—Ä–∞–≤–æ—á–Ω–∏–∫ –ö–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å COVID-19 –õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ö–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å –∫–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å–Ω–æ–π –±–æ–ª–µ–∑–Ω–∏ COVID-19 –æ—Ç –û–†–í–ò –∏ –≥—Ä–∏–ø–ø–∞  COVID-19 –ö–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å –º–æ–∂–µ—Ç –ø—Ä–æ—Ç–µ–∫–∞—Ç—å –≤ –±–æ–ª–µ–µ —Ç—è–∂–µ–ª–æ–π —Ñ–æ—Ä–º–µ, –Ω–µ–∂–µ–ª–∏ –∫–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å–∞ –æ—Ç –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –±–µ–∑–æ–±–∏–¥–Ω–æ–π –ø—Ä–æ—Å—Ç—É–¥—ã.  –í –∫–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å–∞ –æ—Ç –û–†–í–ò   –ë–æ–ª–µ–µ –¥–ª–∏—Ç–µ–ª—å–Ω—ã–π –∏–Ω–∫—É–±–∞—Ü–∏–æ–Ω–Ω—ã–π –∫–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å—É –∂–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–æ 2 –Ω–µ–¥–µ–ª—å. –í –æ—Ç–ª–∏—á–∏–µ –æ—Ç –∫–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å–µ –Ω–∞–±–ª—é–¥–∞–µ—Ç—Å—è –Ω–µ–≤—ã—Å–æ–∫–∞—è 37-37,5¬∞–° —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –∫–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å–æ–º —á–∞—Å—Ç–æ –±—ã–≤–∞–µ—Ç –¥–ª–∏—Ç–µ–ª—å–Ω—ã–º, —Å—É—Ö–∏–º, –º—É—á–∏—Ç–µ–ª—å–Ω—ã–º –ö–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å–Ω–∞—è –∏–Ω—Ñ–µ–∫—Ü–∏—è –º–æ–∂–µ—Ç –≤—ã–∑—ã–≤–∞—Ç—å —Ä–∞—Å—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –∫–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å, –û–†–í–ò, –≥—Ä–∏–ø–ø) –ø–æ–º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã–π –∫–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å–∞ –æ—Ç –≥—Ä–∏–ø–ø–∞  –ù–∞–¥–æ –æ—Ç–º–µ—Ç–∏—Ç—å, —á—Ç–æ COVID-19 –ö–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å —Ä–∞–∑–≤–∏–≤–∞–µ—Ç—Å—è –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ - –æ—Ç –æ–±—â–µ–≥–æ –Ω–µ–¥–æ–º–æ–≥–∞–Ω–∏—è –∫–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å–∞ –æ—Ç –≥—Ä–∏–ø–ø–∞ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–ª –≤—Ä–∞—á, —Ç–∞–∫ –∫–∞–∫ –æ–±–∞ –∫–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å, –µ–º—É —Ç–æ–∂–µ –Ω—É–∂–Ω–∞ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è –ø–æ–º–æ—â—å –∏ –ª–µ—á–µ–Ω–∏–µ –∫–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å–Ω—É—é –∏–Ω—Ñ–µ–∫—Ü–∏—é –∏ —á–∞—Å—Ç–æ —è–≤–ª—è—é—Ç—Å—è –µ–µ –±–µ—Å—Å–∏–º–ø—Ç–æ–º–Ω—ã–º–∏ –∫–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å–∞ —É –≤–∑—Ä–æ—Å–ª–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞ –ø–æ –¥–Ω—è–º  1-3-–π –¥–µ–Ω—å. –∫–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å–Ω–æ–π –∏–Ω—Ñ–µ–∫—Ü–∏–µ–π. –£ 80% –∑–∞–±–æ–ª–µ–≤—à–∏—Ö COVID-19 –∫–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å–æ–º, —Ç—Ä–µ–±—É–µ—Ç—Å—è –≤ —Å—Ä–µ–¥–Ω–µ–º –¥–æ –¥–≤—É—Ö –Ω–µ–¥–µ–ª—å —Å –∫–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å –º–µ—Ç–æ–¥–æ–º –ü–¶–†¬†–¥–∞–ª–∏ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç. –∫–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å SARS-CoV-2, –º–∞–∑–æ–∫ (PCR, Coronavirus SARS-CoV-2, –∫–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å SARS-CoV-2, –º–∞–∑–æ–∫ (PCR, Coronavirus SARS-CoV-2, –∫–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å—É SARS-CoV-2; (Anti-SARS-CoV-2, IgM and IgG, –∫–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å–æ–º —É–∂–µ —Å–ø—Ä–∞–≤–∏–ª—Å—è —Å –∏–Ω—Ñ–µ–∫—Ü–∏–µ–π –∏ –≤—ã–∑–¥–æ—Ä–æ–≤–µ–ª. –∫–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å–∞ COVID-19, –ø—Ä–æ—Å—Ç—É–¥–Ω—ã—Ö –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–π –∏ –≥—Ä–∏–ø–ø–∞. –∫–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å–Ω–æ–π –∏–Ω—Ñ–µ–∫—Ü–∏–∏ (COVID-19). –ú–∏–Ω–∑–¥—Ä–∞–≤ –†–§, –≤–µ—Ä—Å–∏—è –∫–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å –ù–∞—Ä—É—à–µ–Ω–∏–µ –∏–ª–∏ –ø–æ—Ç–µ—Ä—è –≤–∫—É—Å–∞  –ù–∞—Ä—É—à–µ–Ω–∏–µ –∏ –∫–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å covid 19 COVID-19: –º–µ—Ö–∞–Ω–∏–∑–º—ã –∏ –ø—É—Ç–∏ –ø–µ—Ä–µ–¥–∞—á–∏, –∫–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å 2 —Ç—è–∂–µ–ª–æ–≥–æ –æ—Å—Ç—Ä–æ–≥–æ —Ä–µ—Å–ø–∏—Ä–∞—Ç–æ—Ä–Ω–æ–≥–æ —Å–∏–Ω–¥—Ä–æ–º–∞ –∫–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å–Ω–æ–π –±–æ–ª–µ–∑–Ω—å—é 2019 (COronaVIrus Disease 2019 –ö–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å COVID-19 –ü—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏–∫–∞ –Ω–æ–≤–æ–π –∫–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å–Ω–æ–π –∫–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å–Ω–∞—è –∏–Ω—Ñ–µ–∫—Ü–∏—è (COVID-19) –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ –≥—Ä—É–ø–ø–µ'.split(' ')

    const word = words[parseInt(Math.random() * words.length)]

    return {
      varData: {
        word
      },
      code: `
        var word = "${word}";
      `
    }
  },
  testedCodeFunction: (varData, word) => !varData.word.match(/(–∫–æ—Ä–æ–Ω–∞–≤–∏|COVID-19)/) && !word.match(/(–∫–æ—Ä–æ–Ω–∞–≤–∏|COVID-19)/),
  confirm: false
}, {
  id: 13,
  emoji: 'üçí',
  description: '–ù–∞–ø–∏—à–∏—Ç–µ —É—Å–ª–æ–≤–∏–µ –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –≤—ã–≤–æ–¥–∏—Ç—å –±–æ–ª—å—à—É—é –ø–æ –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤—É —Å–∏–º–≤–æ–ª–æ–≤ —Å—Ç—Ä–æ–∫—É. –∏—Å–ø–æ–ª—å–∑—É—è –º–µ—Ç–æ–¥ <selection>length</selection> ‚Äî –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ä–∞–∑–º–µ—Ä —Å—Ç—Ä–æ–∫–∏, –ª–æ–≥–∏—á–µ—Å–∫–∏–π –æ–ø–µ—Ä–∞—Ç–æ—Ä <selection>></selection> ‚Äî –±–æ–ª—å—à–µ. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—é: <selection>console.log(a)</selection> –∏–ª–∏ <selection>console.log(b)</selection> —á—Ç–æ–±—ã –≤—ã–≤–µ—Å—Ç–∏ –≤ –∫–æ–Ω—Å–æ–ª—å.',
  defaultCodeFunction: () => {
    const words = `–ê–±–∏—É,–ê–±—Ä–∏–∫–æ—Å,–ê–≤–æ–∫–∞–¥–æ,–ê–π–≤–∞,–ê–∫–∏,–ê–ª–∏–±–µ—Ä—Ü–∏—è,–ê–ª—ã—á–∞,–ê–º–±–∞—Ä–µ–ª–ª–∞,–ê–º–µ—Ä–∏–∫–∞–Ω—Å–∫–∏–π –∞–±—Ä–∏–∫–æ—Å,–ê–º–µ—Ä–∏–∫–∞–Ω—Å–∫–∏–π –æ—Ä–µ—Ö,–ê–Ω–∞–Ω–∞—Å,–ê–Ω–Ω–æ–Ω–∞ –≥–æ—Ä–Ω–∞—è,–ê–Ω–Ω–æ–Ω–∞ –∫–æ–ª—é—á–∞—è,–ê–Ω–Ω–æ–Ω–∞ —Å–µ—Ç—á–∞—Ç–∞—è,–ê–Ω–Ω–æ–Ω–∞ —á–µ—Ä–∏–º–æ–ª–∞,–ê–Ω–Ω–æ–Ω–∞ —á–µ—à—É–π—á–∞—Ç–∞—è,–ê–Ω—Ç–∏–ª—å—Å–∫–∏–π –∫—Ä—ã–∂–æ–≤–Ω–∏–∫,–ê–ø–µ–ª—å—Å–∏–Ω,–ê—Ä–∞–±–∏–∫–∞,–ê—Ä–∞–∑–∞,–ê—Ä–∞—Ö–∏—Å,–ê—Ä–±—É–∑ –æ–±—ã–∫–Ω–æ–≤–µ–Ω–Ω—ã–π,–ê—Å—Ç—Ä–æ–∫–∞—Ä–∏—É–º –∫–æ–ª—é—á–∏–π,–ê—Ç–∏–º–æ–π—è,–ê—Ñ—Ä–∏–∫–∞–Ω—Å–∫–∏–π –∫–æ–ª—é—á–∏–π –æ–≥—É—Ä–µ—Ü,–ê—Ñ—Ä–∏–∫–∞–Ω—Å–∫–∏–π —Ç–∞–º–∞—Ä–∏–Ω–¥,–ë–∞–∫–∞—É,–ë–∞–∫–ª–∞–∂–∞–Ω,–ë–∞–ª–∏—è,–ë–∞–Ω–∞–Ω—ã,–ë–∞–æ–±–∞–±,–ë–∞—Ä–±–∞–¥–∏–Ω (–ë–æ–ª—å—à–∞—è –≥—Ä–∞–Ω–∞–¥–∏–ª–ª–∞),–ë–∞—Ä–±–∞–¥–æ—Å—Å–∫–∞—è –≤–∏—à–Ω—è,–ë–∞—Ä—Ö–∞—Ç–Ω–æ–µ —è–±–ª–æ–∫–æ,–ë–∞—ç–ª—å,–ë–µ–ª–∞—è —Å–∞–ø–æ—Ç–∞,–ë–µ—Ä–≥–∞–º–æ—Ç,–ë–∏–ª–∏–º–±–∏,–ë–∏—Ä—Å–æ–Ω–∏–º–∞,–ë–ª–∏–≥–∏—è –≤–∫—É—Å–Ω–∞—è,–ë–æ–ª—å—à–æ–π –∑–º–µ–∏–Ω—ã–π —Ñ—Ä—É–∫—Ç,–ë–æ—è—Ä—ã—à–Ω–∏–∫,–ë—Ä–∞–∑–∏–ª—å—Å–∫–∏–π –æ—Ä–µ—Ö,–ë—ã—á—å–µ —Å–µ—Ä–¥—Ü–µ,–í–∞–º–ø–∏,–í–∞–Ω–≥–µ—Ä–∏—è,–í–∞–Ω–∏–ª—å,–í–∏–Ω–æ–≥—Ä–∞–¥,–í–∏—à–Ω—è,–í–æ–∞–≤–∞–Ω–≥–∞,–í–æ–¥—è–Ω–æ–µ(–≤–æ—Å–∫–æ–≤–æ–µ) —è–±–ª–æ–∫–æ,–ì–∞–Ω–¥–∞—Ä–∏—è,–ì–µ–Ω–∏–ø–∞,–ì–∏–±–∏—Å–∫—É—Å —Å—ä–µ–¥–æ–±–Ω—ã–π,–ì–Ω–µ—Ç—É–º –≥–Ω–µ–º–æ–Ω,–ì–æ–ª—É–±–∏–Ω–∞—è —Å–ª–∏–≤–∞,–ì–æ–ª—É–±–æ–π –∫–≤–∞–Ω–¥–æ–Ω–≥,–ì–æ—Ä–ª—è–Ω–∫–∞,–ì–æ—Ä—å–∫–∏–π –æ–≥—É—Ä–µ—Ü,–ì—Ä–∞–Ω–∞–¥–∏–ª–ª–∞ (–ú–∞—Ä–∞–∫—É–π–∞),–ì—Ä–∞–Ω–∞–¥–∏–ª–ª–∞ –±–æ–ª—å—à–∞—è (–ë–∞—Ä–±–∞–¥–∏–Ω),–ì—Ä–∞–Ω–∞–¥–∏–ª–ª–∞ —Å–ª–∞–¥–∫–∞—è,–ì—Ä–∞–Ω–∞—Ç,–ì—Ä–µ–π–ø—Ñ—Ä—É—Ç,–ì—Ä—É–º–∏—á–∞–º–∞,–ì—Ä—É—à–∞,–ì—É–∞–π—è–≤–∞ –∑–µ–º–ª—è–Ω–∏—á–Ω–∞—è,–ì—É–∞–π—è–≤–∞ –∫–æ—Å—Ç–∞-—Ä–∏–∫–∞–Ω—Å–∫–∞—è,–ì—É–∞–π—è–≤–∞ –∫—Ä–∞—Å–Ω–∞—è,–ì—É–∞–π—è–≤–∞ –æ–±—ã–∫–Ω–æ–≤–µ–Ω–Ω–∞—è,–ì—É–∞—Ä–∞–Ω–∞,–î–∞–≤–∏–¥—Å–æ–Ω–∏—è,–î–∞–º—Å–∫–∏–µ –ø–∞–ª—å—á–∏–∫–∏,–î–µ—Ä–µ–≤—è–Ω–Ω–æ–µ —è–±–ª–æ–∫–æ,–î–µ—Å–µ—Ä—Ç–Ω—ã–π –∫–≤–∞–Ω–¥–æ–Ω–≥,–î–∂–µ–∫—Ñ—Ä—É—Ç,–î—Ä–µ–≤–µ—Å–Ω–∞—è –∫–∞–ª–µ–±–∞—Å–∞,–î—É–∫—É,–î—É—Ä–∏–∞–Ω,–î—É—Ä–∏–∞–Ω —Ü–∏–±–µ—Ç–∏–Ω–æ–≤—ã–π,–î—ã–Ω–Ω–∞—è –≥—Ä—É—à–∞,–î—ã–Ω–Ω–æ–µ –¥–µ—Ä–µ–≤–æ,–î—ã–Ω—è –æ–±—ã–∫–Ω–æ–≤–µ–Ω–Ω–∞—è,–ï–≤–≥–µ–Ω–∏—è –æ–¥–Ω–æ—Ü–≤–µ—Ç–∫–æ–≤–∞—è,–ñ–∞–±–æ—Ç–∏–∫–∞–±–∞,–ó–≤–µ–∑–¥—á–∞—Ç–æ–µ —è–±–ª–æ–∫–æ,–ó–µ–º–ª—è–Ω–∏—á–Ω–∞—è –≥—Ä—É—à–∞,–ó–µ–º–ª—è–Ω–∏—á–Ω—ã–π —Ç–æ–º–∞—Ç,–ó–µ–º–ª—è–Ω–æ–π –æ—Ä–µ—Ö,–ó–∏–∑–∏—Ñ—É—Å –º–∞–≤—Ä–∏—Ç–∞–Ω—Å–∫–∏–π,–ó–æ–ª–æ—Ç–∞—è —Å–ª–∏–≤–∞,–ó–æ–ª–æ—Ç–∏—Å—Ç—ã–π –∞–ø–µ–ª—å—Å–∏–Ω,–ò–Ω–¥–∏–π—Å–∫–∏–µ –±–æ–±—ã,–ò–Ω–¥–∏–π—Å–∫–∏–π –∏–Ω–∂–∏—Ä,–ò–Ω–¥–∏–π—Å–∫–∏–π –º–∏–Ω–¥–∞–ª—å,–ò–Ω–¥–∏–π—Å–∫–æ–µ —Ä–æ–∑–æ–≤–æ–µ —è–±–ª–æ–∫–æ,–ò–Ω–∂–∏—Ä,–ö–∞–±–∞—á–∫–∏,–ö–∞–∏–Ω–∏—Ç–æ,–ö–∞–∫–∞–æ,–ö–∞–∫—Ç—É—Å –∏–Ω–∂–∏—Ä–æ–≤—ã–π,–ö–∞–ª–∞–º–æ–Ω–¥–∏–Ω,–ö–∞–ª–µ–±–∞—Å–∞,–ö–∞–ª–∏–Ω–∞,–ö–∞–Ω–∞—Ä–∏—É–º —è–π—Ü–µ–≤–∏–¥–Ω—ã–π,–ö–∞–ø—Å–∫–∏–π –∫—Ä—ã–∂–æ–≤–Ω–∏–∫,–ö–∞—Ä–∞–º–±–æ–ª–∞,–ö–∞—Å,–ö–≤–∏–Ω–∏,–ö–≤–∏–Ω—Å–ª–µ–Ω–¥—Å–∫–∏–π –æ—Ä–µ—Ö,–ö–µ–ø–µ–ª—å,–ö–µ—Ç–∞–º–±–∏–ª–ª–∞,–ö–∏–≤–∞–Ω–æ,–ö–∏–≤–∏,–ö–∏—Ç–∞–π—Å–∫–∞—è –∫–∞–ª–µ–±–∞—Å–∞,–ö–ª–µ–º–µ–Ω—Ç–∏–Ω,–ö–æ–∫–∫–æ–ª–æ–±–∞ —è–≥–æ–¥–æ–Ω–æ—Å–Ω–∞—è,–ö–æ–∫–æ—Å,–ö–æ—Ä–∏–ª–ª–∞,–ö–æ—Ñ–µ–π–Ω—ã–µ –¥–µ—Ä–µ–≤—å—è,–ö—Ä–∞–Ω–∂–∏,–ö—É–º–∫–≤–∞—Ç –æ–≤–∞–ª—å–Ω—ã–π,–ö—É–ø—É–∞—Å—É,–ö—É—Ä–±–∞—Ä–∏–ª,–ö—É—Å—Ç–æ–≤–æ–π –≥–æ—Ä–æ—à–µ–∫,–õ–∞–π–º –Ω–∞—Å—Ç–æ—è—â–∏–π,–õ–∞–Ω–≥—Å–∞—Ç,–õ–∞–Ω—Å–∏—É–º –¥–æ–º–∞—à–Ω–∏–π,–õ–µ—É—Ü–µ–Ω–∞ —Å–≤–µ—Ç–ª–æ–≥–æ–ª–æ–≤—á–∞—Ç–∞—è,–õ–∏–±–µ—Ä–∏–∫–∞,–õ–∏–∫–∞–Ω–∏—è,–õ–∏–º–æ–Ω –≥—Ä—É–±–æ–∫–æ–∂–∏—Å—Ç—ã–π,–õ–∏–º–æ–Ω –æ–±—ã–∫–Ω–æ–≤–µ–Ω–Ω—ã–π,–õ–∏–º–æ–Ω –ú–µ–π–µ—Ä–∞,–õ–∏–º–æ–Ω–Ω–∞—è –æ—Å–∏–Ω–∞,–õ–∏—á–∏,–õ–æ–±–∏—è,–õ–æ–∂–Ω—ã–π –º–∞–Ω–≥—É—Å—Ç–∞–Ω,–õ–æ—Ö —É–∑–∫–æ–ª–∏—Å—Ç–Ω—ã–π,–õ—É–∫—É–º–∞,–õ—É–ª–æ,–õ—é—Ñ—Ñ–∞ –æ—Å—Ç—Ä–æ—Ä–µ–±—Ä–∏—Å—Ç–∞—è,–ú–∞–±–æ–ª–æ,–ú–∞–¥–∞–≥–∞—Å–∫–∞—Ä—Å–∫–∞—è —Å–ª–∏–≤–∞,–ú–∞–∫–∞–¥–∞–º–∏—è —Ü–µ–ª—å–Ω–æ–ª–∏—Å—Ç–Ω–∞—è,–ú–∞–ª–∞–±–∞—Ä—Å–∫–∞—è —Ç—ã–∫–≤–∞,–ú–∞–ª–∞–±–∞—Ä—Å–∫–∏–π –∞–ø–µ–ª—å—Å–∏–Ω,–ú–∞–ª–∞–π—Å–∫–æ–µ —è–±–ª–æ–∫–æ,–ú–∞–ª—É–∫–æ,–ú–∞–ª—å–ø–∏–≥–∏—è –≥—Ä–∞–Ω–∞—Ç–æ–ª–∏—Å—Ç–Ω–∞—è,–ú–∞–º–º–µ—è –∞–º–µ—Ä–∏–∫–∞–Ω—Å–∫–∞—è,–ú–∞–º–æ–Ω—á–∏–ª–ª–æ (–õ–∞–π–º –∏—Å–ø–∞–Ω—Å–∫–∏–π),–ú–∞–Ω–≥–æ –±–ª–∞–≥–æ—É—Ö–∞—é—â–µ–µ,–ú–∞–Ω–≥–æ –≤–µ–ª–∏–∫–æ–ª–µ–ø–Ω–æ–µ,–ú–∞–Ω–≥–æ –∏–Ω–¥–∏–π—Å–∫–æ–µ,–ú–∞–Ω–≥–æ —Ä–µ–∑–∫–æ –ø–∞—Ö–Ω—É—â–µ–µ,–ú–∞–Ω–≥–æ—Å—Ç–∞–Ω,–ú–∞–Ω–≥—É—Å—Ç–∞–Ω,–ú–∞–Ω–¥–∞—Ä–∏–Ω,–ú–∞–Ω–∏–ª–∫–∞—Ä–∞,–ú–∞—Ä–∞–∫—É–π—è,–ú–∞—Ä–º–µ–ª–∞–¥–Ω—ã–π –ø–ª–æ–¥,–ú–∞—Ä—É–ª–∞,–ú–∞—É—Ä–∏—Ü–∏—è –∏–∑–≤–∏–ª–∏—Å—Ç–∞—è,–ú–∞—à,–ú–µ–∫—Å–∏–∫–∞–Ω—Å–∫–∞—è –∑–µ–º–ª—è–Ω–∞—è –≤–∏—à–Ω—è,–ú–µ–∫—Å–∏–∫–∞–Ω—Å–∫–∏–π –æ–≥—É—Ä–µ—Ü,–ú–µ–ª–∏–Ω–∂–æ,–ú–æ–∫–≤–∞,–ú–æ–º–±–∏–Ω –∂–µ–ª—Ç—ã–π,–ú–æ–º–±–∏–Ω –∫—Ä–∞—Å–Ω—ã–π,–ú–æ–º–æ—Ä–¥–∏–∫–∞,–ú–æ—Ä–∏–Ω–¥–∞,–ú—É–Ω–¥—É,–ú—É—Å–∫–∞—Ç–Ω—ã–π –æ—Ä–µ—Ö,–ú—É—à–º—É–ª–∞ —è–ø–æ–Ω—Å–∫–∞—è,–ù–∞—Ä–∞–Ω—Ö–∏–ª–ª–∞,–ù—è–º-–Ω—è–º,–ù–µ–∫—Ç–∞—Ä–∏–Ω (–ø–æ–¥–≤–∏–¥ –ø–µ—Ä—Å–∏–∫–∞),–û–±–µ–∑—å—è–Ω–∏–π —Ö–ª–µ–±,–û–≥—É—Ä–µ—Ü,–û–≥—É—Ä–µ—á–Ω–æ–µ –¥–µ—Ä–µ–≤–æ,–û—Ä–µ—Ö –∫–µ—à—å—é,–ü–∞–ª—å–º–∞ –∫–∞—Ç–µ—Ö—É,–ü–∞–ª—å–º–∞ –∫–æ–∫–æ—Å–æ–≤–∞—è,–ü–∞–ª—å–º–∞ –º–∞—Å–ª–∏—á–Ω–∞—è –∞—Ñ—Ä–∏–∫–∞–Ω—Å–∫–∞—è,–ü–∞–ª—å–º–∞ –ø–µ—Ä—Å–∏–∫–æ–≤–∞—è,–ü–∞–ª—å—á–∏–∫–æ–≤—ã–π –ª–∞–π–º,–ü–∞–ø–∞–π—è,–ü–∞–ø–∞–π—è –≥–æ—Ä–Ω–∞—è,–ü–∞–ø–µ–¥–∞,–ü–∞–ø—Ä–∏–∫–∞,–ü–∞—Ä–∞-–≥—É–∞–π—è–≤–∞,–ü–∞—Ä–∫–∏—è –∫—Ä–∞—Å–∏–≤–∞—è,–ü–∞—Å—Å–∏—Ñ–ª–æ—Ä–∞ —Å—ä–µ–¥–æ–±–Ω–∞—è,–ü–µ–∫—É–∏,–ü–µ–ø–∏–Ω–æ,–ü–µ—Ä–µ—Ü,–ü–µ—Ä–µ—Ü –∫–∞–π–µ–Ω—Å–∫–∏–π,–ü–µ—Ä–µ—Ü —Å—Ç—Ä—É—á–∫–æ–≤—ã–π,–ü–µ—Ä—Å–∏–∫,–ü–µ—Ä—É–∞–Ω—Å–∫–∞—è –≤–∏—à–Ω—è,–ü–∏—Ç–∞–π—è,–ü–∏—Ç–æ–º–±–∞,–ü–∏—à–∏,–ü–æ–º–µ–ª–æ,–ü–æ–º–µ—Ä–∞–Ω–µ—Ü,–ü–æ–º–∏–¥–æ—Ä,–ü–æ–º–ø–µ–ª—å–º—É—Å,–ü–æ–Ω—Ü–∏—Ä—É—Å (–Ω–µ—Å—ä–µ–¥–æ–±–Ω—ã–π –ø–ª–æ–¥),–ü—Ä–∏–º–æ—Ä—Å–∫–∏–π –≤–∏–Ω–æ–≥—Ä–∞–¥,–ü—É—Ç–µ—Ä–∏—è,–ü—É–ª–∞—Å–∞–Ω,–†–∞–∫—É–º-—Å–∞–ª–∞–∫–∫–∞,–†–∞–º–±–∞–π,–†–∞–º–±—É—Ç–∞–Ω,–†–æ–±—É—Å—Ç–∞,–†–æ–∑–æ–≤–æ–µ —è–±–ª–æ–∫–æ,–†–æ–ª–ª–∏–Ω–∏—è —Å–ª–∏–∑–∏—Å—Ç–∞—è,–°–∞–ª–∞–∫–∫–∞,–°–∞–ª–∞–∫–∫–∞ —Å–∫—É—á–µ–Ω–Ω–∞—è,–°–∞–ª–∞–º–∞–Ω–¥—Ä–æ–≤–æ–µ –¥–µ—Ä–µ–≤–æ,–°–∞–Ω—Ç–æ–ª,–°–∞–ø–æ–¥–∏–ª–ª–∞,–°–∞—Ç—Å—É–º–∞,–°–∞—Ö–∞—Ä–Ω–æ–µ —è–±–ª–æ–∫–æ,–°–∞—Ö–∞—Ä–Ω—ã–π –≥–æ—Ä–æ—à–µ–∫,–°–≤–µ—á–Ω–æ–µ –¥–µ—Ä–µ–≤–æ,–°–≤–∏—Ç–∏,–°–∏–∑–∏–≥–∏—É–º –∞–∫–≤–µ—É–º,–°–∏–∑–∏–≥–∏—É–º –º–∞–ª–∞–∫–∫—Å–∫–∏–π,–°–∏–∑–∏–≥–∏—É–º —è–º–±–æ–∑–∞,–°–∏–Ω–≥–∞–ø—É—Ä—Å–∫–∏–π –º–∏–Ω–¥–∞–ª—å,–°–ª–∏–≤–∞,–°–ª–∏–≤–∞ –∫–∞–∫–∞–¥—É,–°–ª–æ–Ω–æ–≤—å–µ —è–±–ª–æ–∫–æ,–°–º–µ—Ç–∞–Ω–Ω–æ–µ —è–±–ª–æ–∫–æ,–°–æ–Ω—Å–æ—è,–°–æ—è,–°–ø–∞—Ä–∂–µ–≤–∞—è —Ñ–∞—Å–æ–ª—å,–°—Ç—Ä–∞—Å—Ç–æ—Ü–≤–µ—Ç,–°—É—Ä–∏–Ω–∞–º—Å–∫–∞—è –≤–∏—à–Ω—è,–°—ä–µ–¥–æ–±–Ω—ã–π —Ç–∞–∏—Ç—è–Ω—Å–∫–∏–π –æ—Ä–µ—Ö,–¢–∞–∏—Ç—è–Ω—Å–∫–æ–µ —è–±–ª–æ–∫–æ,–¢–∞–∫–∞–∫–æ,–¢–∞–º–∞—Ä–∏–ª–ª–æ,–¢–∞–º–∞—Ä–∏–Ω–¥,–¢–∞–Ω–∂–µ—Ä–∏–Ω,–¢–µ—Ä–º–∏–Ω–∞–ª–∏—è –∫–∞—Ç–∞–ø–ø–∞,–¢–æ–º–∞—Ç –Ω–∞—Å—Ç–æ—è—â–∏–π,–¢–æ–º–∞—Ç–Ω–æ–µ –¥–µ—Ä–µ–≤–æ,–¢—É–∫—É–º–∞,–¢—É–ø–∞,–¢—ã–∫–≤–∞ –±—É—Ç—ã–ª–æ—á–Ω–∞—è,–¢—ã–∫–≤–∞ –≤–æ—Å–∫–æ–≤–∞—è,–¢—ã–∫–≤–∞ –º—É—Å–∫–∞—Ç–Ω–∞—è,–¢—ã–∫–≤–∞ –æ–±—ã–∫–Ω–æ–≤–µ–Ω–Ω–∞—è,–¢—ã–∫–≤–∞ —Ñ–∏–≥–æ–ª–∏—Å—Ç–Ω–∞—è,–¢—ã–∫–≤–µ–Ω–Ω–æ–µ –¥–µ—Ä–µ–≤–æ,–§–µ–π—Ö–æ–∞,–§–µ—Ä–æ–Ω–∏—è –ª–∏–º–æ–Ω–Ω–∞—è,–§–µ—Ä–æ–Ω–∏—è —Å–ª–æ–Ω–æ–≤–∞—è,–§–∏–∑–∞–ª–∏—Å –∑–µ–º–ª—è–Ω–∏—á–Ω—ã–π,–§–∏–ª–∏–ø–ø–∏–Ω—Å–∫–æ–µ —Ä–æ–∑–æ–≤–æ–µ —è–±–ª–æ–∫–æ,–§–∏–ª–ª–∞–Ω—Ç—É—Å –∫–∏—Å–ª—ã–π,–§–∏–Ω–∏–∫,–§–ª–∞–∫—É—Ä—Ü–∏—è,–•–ª–µ–±–Ω–æ–µ –¥–µ—Ä–µ–≤–æ,–•–ª–µ–±–Ω—ã–µ –±–æ–±—ã,–•—É—Ä–º–∞ –≤–æ—Å—Ç–æ—á–Ω–∞—è (—è–ø–æ–Ω—Å–∫–∞—è),–¶–µ–π–ª–æ–Ω—Å–∫–∏–π –∫—Ä—ã–∂–æ–≤–Ω–∏–∫,–¶–∏–∫–ª–∞–Ω—Ç–µ—Ä–∞,–¶—É–∫–∫–∏–Ω–∏,–ß–∞–π–æ—Ç,–ß–∞–º–ø–µ–¥–∞–∫,–ß–µ—Ä–µ—à–Ω—è,–ß–µ—Ä–∏–º–æ–π—è,–ß–µ—Ä–Ω–∞—è –≥—É–∞–π—è–≤–∞,–ß–µ—Ä–Ω–∞—è —Å–∞–ø–æ—Ç–∞,–ß–µ—Ä–Ω–∞—è —Ö—É—Ä–º–∞,–ß–µ—Ä–Ω—ã–π —Ç–∞–º–∞—Ä–∏–Ω–¥,–ß–∏–ª–∏,–ß–∏–ª–∏–±—É—Ö–∞ –∫–æ–ª—é—á–∞—è,–ß—É–ø–∞,–®–æ–∫–æ–ª–∞–¥–Ω–æ–µ –¥–µ—Ä–µ–≤–æ,–Ø–±–ª–æ–∫–æ,–Ø–±–ª–æ–∫–æ-–∫–∞–∂—É,–Ø–±–æ—Ç–∏–∫–∞–±–∞,–Ø–º–∞–π—Å–∫–∞—è –≤–∏—à–Ω—è,–Ø—Ç–æ–±–∞`.split(',')

    const a = words[parseInt(Math.random() * words.length)]
    const b = words[parseInt(Math.random() * words.length)]

    return {
      varData: {
        a,
        b
      },
      code: `
        var a = "${a}";
        var b = "${b}";
      `
    }
  },
  testedCodeFunction: (varData, word) => varData.a.length > varData.b.length ? varData.a.length === word.length : varData.b.length === word.length,
  confirm: false
}, {
  id: 14,
  emoji: 'üîç',
  description: '–ù–∞–ø–∏—à–∏—Ç–µ —É—Å–ª–æ–≤–∏–µ –∫–æ—Ç–æ—Ä–æ–µ –Ω–∞–π–¥–µ—Ç —á–µ–ª–æ–≤–µ–∫–∞ –ø–æ –∏–º–µ–Ω–∏ –∏ —Ñ–∞–º–∏–ª–∏–∏ –∏—Å–ø–æ–ª—å–∑—É—è –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã <selection>==</selection> ‚Äî —Ä–∞–≤–Ω–æ. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—é: <selection>console.log(first_name + " " + last_name)</selection> —á—Ç–æ–±—ã –≤—ã–≤–µ—Å—Ç–∏ –≤ –∫–æ–Ω—Å–æ–ª—å.',
  defaultCodeFunction: () => {
    const first_names = ["–í–ª–∞–¥", "–í–ª–∞–¥", "–í–ª–∞–¥", "–¢–æ–ª–∏–∫", "–ñ–µ–Ω—è", "–ò–≥–æ—Ä—å", "–ê–Ω—Ç–æ–Ω", "–°—Ç–∞—Å", "–î–µ–Ω–∏—Å", "–°–∞—à–∞"]
    const last_names = ["–ü–µ—Ç—Ä–æ–≤", "–°–¥–æ—Ä–æ–≤", "–ü–æ–Ω–∞–º–∞—Ä–µ–≤", "–ü–æ–Ω–∞–º–∞—Ä–µ–≤", "–ü–æ–Ω–∞–º–∞—Ä–µ–≤"]

    const first_name = first_names[parseInt(Math.random() * first_names.length)]
    const last_name = last_names[parseInt(Math.random() * last_names.length)]

    return {
      varData: {
        first_name,
        last_name
      },
      code: `
        var first_name = "${first_name}";
        var last_name = "${last_name}";
        var findUser = "–í–ª–∞–¥ –ü–æ–Ω–∞–º–∞—Ä–µ–≤"
      `
    }
  },
  testedCodeFunction: (varData, findUser) => (varData.first_name + ' ' + varData.last_name) === findUser,
  confirm: false
}, {
  id: 15,
  emoji: 'üåÜ',
  description: '–ù–∞–ø–∏—à–∏—Ç–µ —É—Å–ª–æ–≤–∏–µ –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –≤—ã–≤–æ–¥–∏—Ç—å –º–µ–Ω—å—à—É—é –ø–æ –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤—É —Å–∏–º–≤–æ–ª–æ–≤ —Å—Ç—Ä–æ–∫—É. –∏—Å–ø–æ–ª—å–∑—É—è –º–µ—Ç–æ–¥ <selection>length</selection> ‚Äî –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ä–∞–∑–º–µ—Ä —Å—Ç—Ä–æ–∫–∏, –ª–æ–≥–∏—á–µ—Å–∫–∏–π –æ–ø–µ—Ä–∞—Ç–æ—Ä <selection>></selection> ‚Äî –±–æ–ª—å—à–µ. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—é: <selection>console.log(a)</selection> –∏–ª–∏ <selection>console.log(b)</selection> —á—Ç–æ–±—ã –≤—ã–≤–µ—Å—Ç–∏ –≤ –∫–æ–Ω—Å–æ–ª—å.',
  defaultCodeFunction: () => {
    const words = '–ê–±–∞–∑–∞,–ê–±–∞–∫–∞–Ω,–ê–±–¥—É–ª–∏–Ω–æ,–ê–±–∏–Ω—Å–∫,–ê–≥–∏–¥–µ–ª—å,–ê–≥—Ä—ã–∑,–ê–¥—ã–≥–µ–π—Å–∫,–ê–∑–Ω–∞–∫–∞–µ–≤–æ,–ê–∑–æ–≤,–ê–∫-–î–æ–≤—É—Ä–∞–∫,–ê–∫—Å–∞–π,–ê–ª–∞–≥–∏—Ä,–ê–ª–∞–ø–∞–µ–≤—Å–∫,–ê–ª–∞—Ç—ã—Ä—å,–ê–ª–¥–∞–Ω,–ê–ª–µ–π—Å–∫,–ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤,–ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤—Å–∫,–ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤—Å–∫-–°–∞—Ö–∞–ª–∏–Ω—Å–∫–∏–π,–ê–ª–µ–∫—Å–µ–µ–≤–∫–∞,–ê–ª–µ–∫—Å–∏–Ω,–ê–ª–∑–∞–º–∞–π,–ê–ª—É–ø–∫–∞,–ê–ª—É—à—Ç–∞,–ê–ª—å–º–µ—Ç—å–µ–≤—Å–∫,–ê–º—É—Ä—Å–∫,–ê–Ω–∞–¥—ã—Ä—å,–ê–Ω–∞–ø–∞,–ê–Ω–≥–∞—Ä—Å–∫,–ê–Ω–¥—Ä–µ–∞–ø–æ–ª—å,–ê–Ω–∂–µ—Ä–æ-–°—É–¥–∂–µ–Ω—Å–∫,–ê–Ω–∏–≤–∞,–ê–ø–∞—Ç–∏—Ç—ã,–ê–ø—Ä–µ–ª–µ–≤–∫–∞,–ê–ø—à–µ—Ä–æ–Ω—Å–∫,–ê—Ä–∞–º–∏–ª—å,–ê—Ä–≥—É–Ω,–ê—Ä–¥–∞—Ç–æ–≤,–ê—Ä–¥–æ–Ω,–ê—Ä–∑–∞–º–∞—Å,–ê—Ä–∫–∞–¥–∞–∫,–ê—Ä–º–∞–≤–∏—Ä,–ê—Ä–º—è–Ω—Å–∫,–ê—Ä—Å–µ–Ω—å–µ–≤,–ê—Ä—Å–∫,–ê—Ä—Ç—ë–º,–ê—Ä—Ç—ë–º–æ–≤—Å–∫,–ê—Ä—Ç—ë–º–æ–≤—Å–∫–∏–π,–ê—Ä—Ö–∞–Ω–≥–µ–ª—å—Å–∫,–ê—Å–±–µ—Å—Ç,–ê—Å–∏–Ω–æ,–ê—Å—Ç—Ä–∞—Ö–∞–Ω—å,–ê—Ç–∫–∞—Ä—Å–∫,–ê—Ö—Ç—É–±–∏–Ω—Å–∫,–ê—á–∏–Ω—Å–∫,–ê—à–∞,–ë–∞–±–∞–µ–≤–æ,–ë–∞–±—É—à–∫–∏–Ω,–ë–∞–≤–ª—ã,–ë–∞–≥—Ä–∞—Ç–∏–æ–Ω–æ–≤—Å–∫,–ë–∞–π–∫–∞–ª—å—Å–∫,–ë–∞–π–º–∞–∫,–ë–∞–∫–∞–ª,–ë–∞–∫—Å–∞–Ω,–ë–∞–ª–∞–±–∞–Ω–æ–≤–æ,–ë–∞–ª–∞–∫–æ–≤–æ,–ë–∞–ª–∞—Ö–Ω–∞,–ë–∞–ª–∞—à–∏—Ö–∞,–ë–∞–ª–∞—à–æ–≤,–ë–∞–ª–µ–π,–ë–∞–ª—Ç–∏–π—Å–∫,–ë–∞—Ä–∞–±–∏–Ω—Å–∫,–ë–∞—Ä–Ω–∞—É–ª,–ë–∞—Ä—ã—à,–ë–∞—Ç–∞–π—Å–∫,–ë–∞—Ö—á–∏—Å–∞—Ä–∞–π,–ë–µ–∂–µ—Ü–∫,–ë–µ–ª–∞—è –ö–∞–ª–∏—Ç–≤–∞,–ë–µ–ª–∞—è –•–æ–ª—É–Ω–∏—Ü–∞,–ë–µ–ª–≥–æ—Ä–æ–¥,–ë–µ–ª–µ–±–µ–π,–ë–µ–ª—ë–≤,–ë–µ–ª–∏–Ω—Å–∫–∏–π,–ë–µ–ª–æ–≤–æ,–ë–µ–ª–æ–≥–æ—Ä—Å–∫,–ë–µ–ª–æ–≥–æ—Ä—Å–∫,–ë–µ–ª–æ–∑–µ—Ä—Å–∫,–ë–µ–ª–æ–∫—É—Ä–∏—Ö–∞,–ë–µ–ª–æ–º–æ—Ä—Å–∫,–ë–µ–ª–æ—Ä–µ—Ü–∫,–ë–µ–ª–æ—Ä–µ—á–µ–Ω—Å–∫,–ë–µ–ª–æ—É—Å–æ–≤–æ,–ë–µ–ª–æ—è—Ä—Å–∫–∏–π,–ë–µ–ª—ã–π,–ë–µ—Ä–¥—Å–∫,–ë–µ—Ä–µ–∑–Ω–∏–∫–∏,–ë–µ—Ä—ë–∑–æ–≤—Å–∫–∏–π,–ë–µ—Ä—ë–∑–æ–≤—Å–∫–∏–π,–ë–µ—Å–ª–∞–Ω,–ë–∏–π—Å–∫,–ë–∏–∫–∏–Ω,–ë–∏–ª–∏–±–∏–Ω–æ,–ë–∏—Ä–æ–±–∏–¥–∂–∞–Ω,–ë–∏—Ä—Å–∫,–ë–∏—Ä—é—Å–∏–Ω—Å–∫,–ë–∏—Ä—é—á,–ë–ª–∞–≥–æ–≤–µ—â–µ–Ω—Å–∫ (–ê–º—É—Ä—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å),–ë–ª–∞–≥–æ–≤–µ—â–µ–Ω—Å–∫ (–ë–∞—à–∫–æ—Ä—Ç–æ—Å—Ç–∞–Ω),–ë–ª–∞–≥–æ–¥–∞—Ä–Ω—ã–π,–ë–æ–±—Ä–æ–≤,–ë–æ–≥–¥–∞–Ω–æ–≤–∏—á,–ë–æ–≥–æ—Ä–æ–¥–∏—Ü–∫,–ë–æ–≥–æ—Ä–æ–¥—Å–∫,–ë–æ–≥–æ—Ç–æ–ª,–ë–æ–≥—É—á–∞—Ä,–ë–æ–¥–∞–π–±–æ,–ë–æ–∫—Å–∏—Ç–æ–≥–æ—Ä—Å–∫,–ë–æ–ª–≥–∞—Ä,–ë–æ–ª–æ–≥–æ–µ,–ë–æ–ª–æ—Ç–Ω–æ–µ,–ë–æ–ª–æ—Ö–æ–≤–æ,–ë–æ–ª—Ö–æ–≤,–ë–æ–ª—å—à–æ–π –ö–∞–º–µ–Ω—å,–ë–æ—Ä,–ë–æ—Ä–∑—è,–ë–æ—Ä–∏—Å–æ–≥–ª–µ–±—Å–∫,–ë–æ—Ä–æ–≤–∏—á–∏,–ë–æ—Ä–æ–≤—Å–∫,–ë–æ—Ä–æ–¥–∏–Ω–æ,–ë—Ä–∞—Ç—Å–∫,–ë—Ä–æ–Ω–Ω–∏—Ü—ã,–ë—Ä—è–Ω—Å–∫,–ë—É–≥—É–ª—å–º–∞,–ë—É–≥—É—Ä—É—Å–ª–∞–Ω,–ë—É–¥—ë–Ω–Ω–æ–≤—Å–∫,–ë—É–∑—É–ª—É–∫,–ë—É–∏–Ω—Å–∫,–ë—É–π,–ë—É–π–Ω–∞–∫—Å–∫,–ë—É—Ç—É—Ä–ª–∏–Ω–æ–≤–∫–∞,–í–∞–ª–¥–∞–π,–í–∞–ª—É–π–∫–∏,–í–µ–ª–∏–∂,–í–µ–ª–∏–∫–∏–µ –õ—É–∫–∏,–í–µ–ª–∏–∫–∏–π –ù–æ–≤–≥–æ—Ä–æ–¥,–í–µ–ª–∏–∫–∏–π –£—Å—Ç—é–≥,–í–µ–ª—å—Å–∫,–í–µ–Ω—ë–≤,–í–µ—Ä–µ—â–∞–≥–∏–Ω–æ,–í–µ—Ä–µ—è,–í–µ—Ä—Ö–Ω–µ—É—Ä–∞–ª—å—Å–∫,–í–µ—Ä—Ö–Ω–∏–π –¢–∞–≥–∏–ª,–í–µ—Ä—Ö–Ω–∏–π –£—Ñ–∞–ª–µ–π,–í–µ—Ä—Ö–Ω—è—è –ü—ã—à–º–∞,–í–µ—Ä—Ö–Ω—è—è –°–∞–ª–¥–∞,–í–µ—Ä—Ö–Ω—è—è –¢—É—Ä–∞,–í–µ—Ä—Ö–æ—Ç—É—Ä—å–µ,–í–µ—Ä—Ö–æ—è–Ω—Å–∫,–í–µ—Å—å–µ–≥–æ–Ω—Å–∫,–í–µ—Ç–ª—É–≥–∞,–í–∏–¥–Ω–æ–µ,–í–∏–ª—é–π—Å–∫,–í–∏–ª—é—á–∏–Ω—Å–∫,–í–∏—Ö–æ—Ä–µ–≤–∫–∞,–í–∏—á—É–≥–∞,–í–ª–∞–¥–∏–≤–æ—Å—Ç–æ–∫,–í–ª–∞–¥–∏–∫–∞–≤–∫–∞–∑,–í–ª–∞–¥–∏–º–∏—Ä,–í–æ–ª–≥–æ–≥—Ä–∞–¥,–í–æ–ª–≥–æ–¥–æ–Ω—Å–∫,–í–æ–ª–≥–æ—Ä–µ—á–µ–Ω—Å–∫,–í–æ–ª–∂—Å–∫,–í–æ–ª–∂—Å–∫–∏–π,–í–æ–ª–æ–≥–¥–∞,–í–æ–ª–æ–¥–∞—Ä—Å–∫,–í–æ–ª–æ–∫–æ–ª–∞–º—Å–∫,–í–æ–ª–æ—Å–æ–≤–æ,–í–æ–ª—Ö–æ–≤,–í–æ–ª—á–∞–Ω—Å–∫,–í–æ–ª—å—Å–∫,–í–æ—Ä–∫—É—Ç–∞,–í–æ—Ä–æ–Ω–µ–∂,–í–æ—Ä—Å–º–∞,–í–æ—Å–∫—Ä–µ—Å–µ–Ω—Å–∫,–í–æ—Ç–∫–∏–Ω—Å–∫,–í—Å–µ–≤–æ–ª–æ–∂—Å–∫,–í—É–∫—Ç—ã–ª,–í—ã–±–æ—Ä–≥,–í—ã–∫—Å–∞,–í—ã—Å–æ–∫–æ–≤—Å–∫,–í—ã—Å–æ—Ü–∫,–í—ã—Ç–µ–≥—Ä–∞,–í—ã—à–Ω–∏–π –í–æ–ª–æ—á—ë–∫,–í—è–∑–µ–º—Å–∫–∏–π,–í—è–∑–Ω–∏–∫–∏,–í—è–∑—å–º–∞,–í—è—Ç—Å–∫–∏–µ –ü–æ–ª—è–Ω—ã,–ì–∞–≤—Ä–∏–ª–æ–≤ –ü–æ—Å–∞–¥,–ì–∞–≤—Ä–∏–ª–æ–≤-–Ø–º,–ì–∞–≥–∞—Ä–∏–Ω,–ì–∞–¥–∂–∏–µ–≤–æ,–ì–∞–π,–ì–∞–ª–∏—á,–ì–∞—Ç—á–∏–Ω–∞,–ì–≤–∞—Ä–¥–µ–π—Å–∫,–ì–¥–æ–≤,–ì–µ–ª–µ–Ω–¥–∂–∏–∫,–ì–µ–æ—Ä–≥–∏–µ–≤—Å–∫,–ì–ª–∞–∑–æ–≤,–ì–æ–ª–∏—Ü—ã–Ω–æ,–ì–æ—Ä–±–∞—Ç–æ–≤,–ì–æ—Ä–Ω–æ-–ê–ª—Ç–∞–π—Å–∫,–ì–æ—Ä–Ω–æ–∑–∞–≤–æ–¥—Å–∫,–ì–æ—Ä–Ω—è–∫,–ì–æ—Ä–æ–¥–µ—Ü,–ì–æ—Ä–æ–¥–∏—â–µ,–ì–æ—Ä–æ–¥–æ–≤–∏–∫–æ–≤—Å–∫,–ì–æ—Ä–æ—Ö–æ–≤–µ—Ü,–ì–æ—Ä—è—á–∏–π –ö–ª—é—á,–ì—Ä–∞–π–≤–æ—Ä–æ–Ω,–ì—Ä–µ–º—è—á–∏–Ω—Å–∫,–ì—Ä–æ–∑–Ω—ã–π,–ì—Ä—è–∑–∏,–ì—Ä—è–∑–æ–≤–µ—Ü,–ì—É–±–∞—Ö–∞,–ì—É–±–∫–∏–Ω,–ì—É–±–∫–∏–Ω—Å–∫–∏–π,–ì—É–¥–µ—Ä–º–µ—Å,–ì—É–∫–æ–≤–æ,–ì—É–ª—å–∫–µ–≤–∏—á–∏,–ì—É—Ä—å–µ–≤—Å–∫,–ì—É—Ä—å–µ–≤—Å–∫,–ì—É—Å–µ–≤,–ì—É—Å–∏–Ω–æ–æ–∑—ë—Ä—Å–∫,–ì—É—Å—å-–•—Ä—É—Å—Ç–∞–ª—å–Ω—ã–π,–î–∞–≤–ª–µ–∫–∞–Ω–æ–≤–æ,–î–∞–≥–µ—Å—Ç–∞–Ω—Å–∫–∏–µ –û–≥–Ω–∏,–î–∞–ª–º–∞—Ç–æ–≤–æ,–î–∞–ª—å–Ω–µ–≥–æ—Ä—Å–∫,–î–∞–ª—å–Ω–µ—Ä–µ—á–µ–Ω—Å–∫,–î–∞–Ω–∏–ª–æ–≤,–î–∞–Ω–∫–æ–≤,–î–µ–≥—Ç—è—Ä—Å–∫,–î–µ–¥–æ–≤—Å–∫,–î–µ–º–∏–¥–æ–≤,–î–µ—Ä–±–µ–Ω—Ç,–î–µ—Å–Ω–æ–≥–æ—Ä—Å–∫,–î–∂–∞–Ω–∫–æ–π,–î–∑–µ—Ä–∂–∏–Ω—Å–∫,–î–∑–µ—Ä–∂–∏–Ω—Å–∫–∏–π,–î–∏–≤–Ω–æ–≥–æ—Ä—Å–∫,–î–∏–≥–æ—Ä–∞,–î–∏–º–∏—Ç—Ä–æ–≤–≥—Ä–∞–¥,–î–º–∏—Ç—Ä–∏–µ–≤,–î–º–∏—Ç—Ä–æ–≤,–î–º–∏—Ç—Ä–æ–≤—Å–∫,–î–Ω–æ,–î–æ–±—Ä—è–Ω–∫–∞,–î–æ–ª–≥–æ–ø—Ä—É–¥–Ω—ã–π,–î–æ–ª–∏–Ω—Å–∫,–î–æ–º–æ–¥–µ–¥–æ–≤–æ,–î–æ–Ω–µ—Ü–∫,–î–æ–Ω—Å–∫–æ–π,–î–æ—Ä–æ–≥–æ–±—É–∂,–î—Ä–µ–∑–Ω–∞,–î—É–±–Ω–∞,–î—É–±–æ–≤–∫–∞,–î—É–¥–∏–Ω–∫–∞,–î—É—Ö–æ–≤—â–∏–Ω–∞,–î—é—Ä—Ç—é–ª–∏,–î—è—Ç—å–∫–æ–≤–æ,–ï–≤–ø–∞—Ç–æ—Ä–∏—è,–ï–≥–æ—Ä—å–µ–≤—Å–∫,–ï–π—Å–∫,–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥,–ï–ª–∞–±—É–≥–∞,–ï–ª–µ—Ü,–ï–ª–∏–∑–æ–≤–æ,–ï–ª—å–Ω—è,–ï–º–∞–Ω–∂–µ–ª–∏–Ω—Å–∫,–ï–º–≤–∞,–ï–Ω–∏—Å–µ–π—Å–∫,–ï—Ä–º–æ–ª–∏–Ω–æ,–ï—Ä—à–æ–≤,–ï—Å—Å–µ–Ω—Ç—É–∫–∏,–ï—Ñ—Ä–µ–º–æ–≤,–ñ–µ–ª–µ–∑–Ω–æ–≤–æ–¥—Å–∫,–ñ–µ–ª–µ–∑–Ω–æ–≥–æ—Ä—Å–∫ (–ö—Ä–∞—Å–Ω–æ—è—Ä—Å–∫–∏–π –∫—Ä–∞–π),–ñ–µ–ª–µ–∑–Ω–æ–≥–æ—Ä—Å–∫ (–ö—É—Ä—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å),–ñ–µ–ª–µ–∑–Ω–æ–≥–æ—Ä—Å–∫-–ò–ª–∏–º—Å–∫–∏–π,–ñ–µ—Ä–¥–µ–≤–∫–∞,–ñ–∏–≥—É–ª—ë–≤—Å–∫,–ñ–∏–∑–¥—Ä–∞,–ñ–∏—Ä–Ω–æ–≤—Å–∫,–ñ—É–∫–æ–≤,–ñ—É–∫–æ–≤–∫–∞,–ñ—É–∫–æ–≤—Å–∫–∏–π,–ó–∞–≤–∏—Ç–∏–Ω—Å–∫,–ó–∞–≤–æ–¥–æ—É–∫–æ–≤—Å–∫,–ó–∞–≤–æ–ª–∂—Å–∫'.split(',')

    const a = words[parseInt(Math.random() * words.length)]
    const b = words[parseInt(Math.random() * words.length)]

    return {
      varData: {
        a,
        b
      },
      code: `
        var a = "${a}";
        var b = "${b}";
      `
    }
  },
  testedCodeFunction: (varData, word) => varData.a.length < varData.b.length ? varData.a.length === word.length : varData.b.length === word.length,
  confirm: false
}, {
  id: 16,
  emoji: 'üìÖ',
  description: '–ù–∞–ø–∏—à–∏—Ç–µ —É—Å–ª–æ–≤–∏–µ –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –Ω–∞—Ö–æ–¥–∏—Ç—å –¥–≤–µ –¥–∞—Ç—ã –∏–∑ —Å–ø–∏—Å–∫–∞ –∫–æ–Ω—Å–æ–ª—å, <selection>03.06.01</selection> –∏ <selection>19.08.07</selection>. –ò—Å–ø–æ–ª—å–∑—É—è –º–µ—Ç–æ–¥ <selection>==</selection> ‚Äî —Ä–∞–≤–Ω–æ –∏ –ª–æ–≥–∏—á–µ—Å–∫–∏–π –æ–ø–µ—Ä–∞—Ç–æ—Ä <selection>||</selection> ‚Äî –ò–ª–∏. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—é: <selection>console.log(date)</selection> —á—Ç–æ–±—ã –≤—ã–≤–µ—Å—Ç–∏ –≤ –∫–æ–Ω—Å–æ–ª—å.',
  defaultCodeFunction: () => {
    const dates = ['03.06.01', '19.08.07', '05.12.21', '29.08.87', '15.02.27', '11.12.17', '01.01.11']

    const date = dates[parseInt(Math.random() * dates.length)]

    return {
      varData: {
        date
      },
      code: `
        var date = "${date}";
      `
    }
  },
  testedCodeFunction: (varData, date) => ((date === varData.date && varData.date === '03.06.01') || (date === varData.date && varData.date === '19.08.07')),
  confirm: false
}, {
  id: 17,
  emoji: '‚è∞',
  description: '–ù–∞–ø–∏—à–∏—Ç–µ —É—Å–ª–æ–≤–∏–µ –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –≤–∫–ª—é—á–∞—Ç—å –±—É–¥–∏–ª–∏–Ω–∏–∫ –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ —á–∞—Å—ã —Å <selection>6 —á–∞—Å–æ–≤ —É—Ç—Ä–∞</selection> –ø–æ <selection>10 —á–∞—Å–æ–≤ —É—Ç—Ä–∞</selection> –∏—Å–ø–æ–ª—å–∑—É—è –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã <selection>>=</selection> ‚Äî –±–æ–ª—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ –∏ <selection>>=</selection> ‚Äî –º–µ–Ω—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—é: <selection>console.log(alarm)</selection> —á—Ç–æ–±—ã –≤—ã–≤–µ—Å—Ç–∏ –≤ –∫–æ–Ω—Å–æ–ª—å.',
  defaultCodeFunction: () => {
    if (window._17time === undefined) {
      window._17time = 0
    }

    const time = window._17time

    return {
      varData: {
        time,
      },
      code: `
        var time = ${time};
        var alarm = "–í—Å—Ç–∞–≤–∞–π –Ω–∞ —Ä–∞–±–æ—Ç—É!";
      `,
      endCode: `
        ;window._17time += 1;
        if (window._17time > 23) {
          window._17time = 0;
        }
      `
    }
  },
  testedCodeFunction: (varData, alarm) => alarm === "–í—Å—Ç–∞–≤–∞–π –Ω–∞ —Ä–∞–±–æ—Ç—É!" && (varData.time >= 6 && varData.time <= 10),
  confirm: false
}, {
  id: 18,
  emoji: 'üë©',
  description: '–ù–∞–ø–∏—à–∏—Ç–µ —É—Å–ª–æ–≤–∏–µ –∫–æ—Ç–æ—Ä–æ–µ –Ω–∞–π–¥–µ—Ç —á–µ–ª–æ–≤–µ–∫–∞ –ø–æ –∏–º–µ–Ω–∏ –∏ –≤–æ–∑—Ä–∞—Å—Ç—É –∏–∑–≤–µ—Å—Ç–Ω–æ —á—Ç–æ –µ–µ –∑–æ–≤—É—Ç <selection>–í–∏–∫–∞</selection> –∏ –µ–π <selection>23 –≥–æ–¥–∞</selection>, –ø–æ –Ω–µ–∫–æ—Ç–æ—Ä—ã–º –¥–∞–Ω–Ω—ã–º –µ–π –≤–æ–∑—Ä–∞—Å—Ç –º–æ–∂–µ—Ç –±—ã—Ç—å –∑–∞–ø–∏—Å–∞–Ω —á–∏—Å–ª–æ–º <selection>23</selection>. –ò—Å–ø–æ–ª—å–∑—É—è –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã <selection>==</selection> ‚Äî —Ä–∞–≤–Ω–æ –∏ –ª–æ–≥–∏—á–µ—Å–∫–∏–π –æ–ø–µ—Ä–∞—Ç–æ—Ä <selection>&&</selection> ‚Äî –ò, –ª–æ–≥–∏—á–µ—Å–∫–∏–π –æ–ø–µ—Ä–∞—Ç–æ—Ä <selection>||</selection> ‚Äî –ò–ª–∏. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—é: <selection>console.log(name, age)</selection> —á—Ç–æ–±—ã –≤—ã–≤–µ—Å—Ç–∏ –≤ –∫–æ–Ω—Å–æ–ª—å.',
  defaultCodeFunction: () => {
    const names = ["–í–∏–∫–∞", "–í–∏–∫–∞", "–í–∏–∫–∞", "–í–∏–∫–∞", "–í–∏–∫–∞", "–¢–æ–ª–∏–∫", "–ê–Ω—è", "–ò–≥–æ—Ä—å", "–ú–∞—Ä–∏–Ω–∞", "–°—Ç–∞—Å", "–î–∞—à–∞", "–°–∞—à–∞"]
    const ages = ["23 –≥–æ–¥–∞", 23, "23 –≥–æ–¥–∞", 23, "23 –≥–æ–¥–∞", 23, "15 –ª–µ—Ç", "47 –ª–µ—Ç", "17 –ª–µ—Ç", 25, 27, "19 –ª–µ—Ç"]

    const name = names[parseInt(Math.random() * names.length)]
    const age = ages[parseInt(Math.random() * ages.length)]

    return {
      varData: {
        name,
        age
      },
      code: `
        var name = "${name}";
        var age = ${typeof(age) === 'number' ? `${age}`: `"${age}"`};
      `
    }
  },
  testedCodeFunction: (varData, name, age) => (varData.name === name && varData.age === age) && name === '–í–∏–∫–∞' && (age === '23 –≥–æ–¥–∞' || age === 23),
  confirm: false
}, {
  id: 19,
  emoji: '‚ñ∂Ô∏è',
  description: '–ù–∞–ø–∏—à–∏—Ç–µ —É—Å–ª–æ–≤–∏–µ –∫–æ—Ç–æ—Ä–æ–µ –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç –≤ –∫–æ–Ω—Å–æ–ª—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ —Å—á–∏–ª–∞ –∏—Å–ø–æ–ª—å–∑—É—è –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã <selection>></selection> ‚Äî –ë–æ–ª—å—à–µ. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—é: <selection>console.log(number)</selection> —á—Ç–æ–±—ã –≤—ã–≤–µ—Å—Ç–∏ –≤ –∫–æ–Ω—Å–æ–ª—å.',
  defaultCodeFunction: () => {
    const numbers = Array(100).fill(0).map((_, key) => key - 50)

    const number = numbers[parseInt(Math.random() * numbers.length)]

    return {
      varData: {
        number
      },
      code: `
        var number = ${number};
      `
    }
  },
  testedCodeFunction: (varData, number) => varData.number === number && number > -1,
  confirm: false
}, {
  id: 20,
  emoji: 'üëç',
  description: '–ù–∞–ø–∏—à–∏—Ç–µ —É—Å–ª–æ–≤–∏—è –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –ø–æ –æ—á–µ—Ä–µ–¥–∏ –∏–∑–º–µ–Ω—è—Ç—å –ø–æ–ª–æ–∂–µ–Ω–∏–µ –æ—Ç –ª–∞–π–∫–∞ –∫ –¥–∏–∑–ª–∞–π–∫—É. –ò—Å–ø–æ–ª—å–∑—É—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—é <selection>state = !state</selection> ‚Äî –∏–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—é: <selection>console.log(like)</selection> –∏ <selection>console.log(dislike)</selection> —á—Ç–æ–±—ã –≤—ã–≤–µ—Å—Ç–∏ –≤ –∫–æ–Ω—Å–æ–ª—å.',
  defaultCodeFunction: () => {
    if (window._20state === undefined) {
      window._20state = true
    }

    const state = window._20state
    const dislike = 'üëé'
    const like = 'üëç'

    return {
      varData: {
        dislike,
        like,
        state
      },
      code: `
        var state = ${state};
        var dislike = "${dislike}";
        var like = "${like}";
      `,
      endCode: `
        ;window._20state = state;
      `
    }
  },
  testedCodeFunction: (varData, state) => {
    if (state === varData.like) {
      return varData.state === false
    }

    if (state === varData.dislike) {
      return varData.state === true
    }

    return false
  },
  confirm: false
}, {
  id: 21,
  emoji: 'üë®',
  description: '–ù–∞–ø–∏—à–∏—Ç–µ —É—Å–ª–æ–≤–∏–µ –∫–æ—Ç–æ—Ä–æ–µ –Ω–∞–π–¥–µ—Ç —á–µ–ª–æ–≤–µ–∫–∞ –ø–æ –∏–º–µ–Ω–∏ –∏ –≤–æ–∑—Ä–∞—Å—Ç—É –∏–∑–≤–µ—Å—Ç–Ω–æ —á—Ç–æ –µ–µ –∑–æ–≤—É—Ç <selection>–°–∞—à–∞</selection> –∏ –µ–º—É <selection>27 –ª–µ—Ç</selection>, –ø–æ –Ω–µ–∫–æ—Ç–æ—Ä—ã–º –¥–∞–Ω–Ω—ã–º –µ–π –≤–æ–∑—Ä–∞—Å—Ç –º–æ–∂–µ—Ç –±—ã—Ç—å –∑–∞–ø–∏—Å–∞–Ω —á–∏—Å–ª–æ–º <selection>27</selection>. –ò—Å–ø–æ–ª—å–∑—É—è –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã <selection>==</selection> ‚Äî —Ä–∞–≤–Ω–æ –∏ –ª–æ–≥–∏—á–µ—Å–∫–∏–π –æ–ø–µ—Ä–∞—Ç–æ—Ä <selection>&&</selection> ‚Äî –ò, –ª–æ–≥–∏—á–µ—Å–∫–∏–π –æ–ø–µ—Ä–∞—Ç–æ—Ä <selection>||</selection> ‚Äî –ò–ª–∏. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—é: <selection>console.log(name, age)</selection> —á—Ç–æ–±—ã –≤—ã–≤–µ—Å—Ç–∏ –≤ –∫–æ–Ω—Å–æ–ª—å.',
  defaultCodeFunction: () => {
    const names = ["–°–∞—à–∞", "–°–∞—à–∞", "–°–∞—à–∞", "–°–∞—à–∞", "–°–∞—à–∞", "–¢–æ–ª–∏–∫", "–ê–Ω—è", "–ò–≥–æ—Ä—å", "–ú–∞—Ä–∏–Ω–∞", "–°—Ç–∞—Å", "–î–∞—à–∞", "–í–∏–∫–∞"]
    const ages = ["27 –ª–µ—Ç", 27, "27 –ª–µ—Ç", 27, "27 –ª–µ—Ç", 27, "13 –ª–µ—Ç", "29 –ª–µ—Ç", "30 –ª–µ—Ç", 33, 21, "19 –ª–µ—Ç"]

    const name = names[parseInt(Math.random() * names.length)]
    const age = ages[parseInt(Math.random() * ages.length)]

    return {
      varData: {
        name,
        age
      },
      code: `
        var name = "${name}";
        var age = ${typeof(age) === 'number' ? `${age}`: `"${age}"`};
      `
    }
  },
  testedCodeFunction: (varData, name, age) => (varData.name === name && varData.age === age) && name === '–°–∞—à–∞' && (age === '27 –ª–µ—Ç' || age === 27),
  confirm: false
}, {
  id: 22,
  emoji: 'üçÜ',
  description: '–ù–∞–ø–∏—à–∏—Ç–µ —É—Å–ª–æ–≤–∏–µ –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç —Å–æ–±–∏—Ä–∞—Ç—å —Ç–æ–ª—å–∫–æ –æ–≤–æ—â–∏. –∏—Å–ø–æ–ª—å–∑—É—è –æ–ø–µ—Ä–∞—Ç–æ—Ä <selection>==</selection> ‚Äî —Ä–∞–≤–Ω–æ –∏ –ª–æ–≥–∏—á–µ—Å–∫–∏–π –æ–ø–µ—Ä–∞—Ç–æ—Ä <selection>||</selection> ‚Äî –∏–ª–∏. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—é: <selection>console.log(vegetable)</selection> —á—Ç–æ–±—ã –≤—ã–≤–µ—Å—Ç–∏ –≤ –∫–æ–Ω—Å–æ–ª—å.',
  defaultCodeFunction: () => {
    const vegetables = `–Ø–±–ª–æ–∫–æ,–ê–ø–µ–ª—å—Å–∏–Ω,–ë–∞–∫–ª–∞–∂–∞–Ω,–ì—Ä—É—à–∞,–ú–æ—Ä–∫–æ–≤—å,–ê—Ä–±—É–∑,–û–≥—É—Ä–µ—Ü,–¢–æ–º–∞—Ç,–ö–∞—Ä—Ç–æ—Ñ–µ–ª—å`.split(',')

    const vegetable = vegetables[parseInt(Math.random() * vegetables.length)]

    return {
      varData: {
        vegetable
      },
      code: `
        var vegetable = "${vegetable}";
      `
    }
  },
  testedCodeFunction: (varData, vegetable) => `–ë–∞–∫–ª–∞–∂–∞–Ω,–ú–æ—Ä–∫–æ–≤—å,–û–≥—É—Ä–µ—Ü,–¢–æ–º–∞—Ç,–ö–∞—Ä—Ç–æ—Ñ–µ–ª—å`.split(',').includes(varData.vegetable) && varData.vegetable === vegetable,
  confirm: false
}, {
  id: 23,
  emoji: 'üíª',
  description: '–ù–∞–ø–∏—à–∏—Ç–µ —É—Å–ª–æ–≤–∏–µ –∫–æ—Ç–æ—Ä–æ–µ –∏—Å–∫–∞—Ç—å –≤—ã–±–∏—Ä–∞—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –≤ –∫–æ—Ç–æ—Ä—ã—Ö –µ—Å—Ç—å —Å–ª–æ–≤–∞ <selection>JS</selection> –∏ <selection>JavaScript</selection>. –∏—Å–ø–æ–ª—å–∑—É—è –º–µ—Ç–æ–¥ <selection>match</selection> ‚Äî —Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—é: <selection>console.log(string.match(/(JS|JavaScript)/gi))</selection> —á—Ç–æ–±—ã –≤—ã–≤–µ—Å—Ç–∏ –≤ –∫–æ–Ω—Å–æ–ª—å.',
  defaultCodeFunction: () => {
    const strings = [
      'JS ‚Äî –º—É–ª—å—Ç–∏–ø–∞—Ä–∞–¥–∏–≥–º–µ–Ω–Ω—ã–π —è–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è.',
      'JavaScript¬Æ (—á–∞—Å—Ç–æ –ø—Ä–æ—Å—Ç–æ JS) ‚Äî —ç—Ç–æ –ª–µ–≥–∫–æ–≤–µ—Å–Ω—ã–π, –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∏—Ä—É–µ–º—ã–π –∏–ª–∏ JIT-–∫–æ–º–ø–∏–ª–∏—Ä—É–µ–º—ã–π, –æ–±—ä–µ–∫—Ç–Ω–æ-–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —è–∑—ã–∫ —Å —Ñ—É–Ω–∫—Ü–∏—è–º–∏ –ø–µ—Ä–≤–æ–≥–æ –∫–ª–∞—Å—Å–∞.',
      'JavaScript (/Ààd í…ëÀêv…ôÀåskr…™pt/), often abbreviated as JS, is a programming language that conforms to the ECMAScript specification.',
      'JS ‚Äî —ç—Ç–æ —è–∑—ã–∫, –ø—Ä–æ–≥—Ä–∞–º–º—ã –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º –º–æ–∂–Ω–æ –≤—ã–ø–æ–ª–Ω—è—Ç—å –≤ —Ä–∞–∑–Ω—ã—Ö —Å—Ä–µ–¥–∞—Ö.',
      'C++ (—á–∏—Ç–∞–µ—Ç—Å—è —Å–∏-–ø–ª—é—Å-–ø–ª—é—Å) ‚Äî –∫–æ–º–ø–∏–ª–∏—Ä—É–µ–º—ã–π, —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏ —Ç–∏–ø–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —è–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –æ–±—â–µ–≥–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è.',
      '–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Ç–∞–∫–∏–µ –ø–∞—Ä–∞–¥–∏–≥–º—ã –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è, –∫–∞–∫ –ø—Ä–æ—Ü–µ–¥—É—Ä–Ω–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ, –æ–±—ä–µ–∫—Ç–Ω–æ-–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ, –æ–±–æ–±—â—ë–Ω–Ω–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ.',
      '–Ø–∑—ã–∫ C++ (–ø—Ä–æ–∏–∑–Ω–æ—Å–∏—Ç—Å—è –∫–∞–∫ ¬´–°–∏ –ø–ª—é—Å –ø–ª—é—Å¬ª)',
      'Java ‚Äî —Å—Ç—Ä–æ–≥–æ —Ç–∏–ø–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç–Ω–æ-–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —è–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è',
      '–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ C#.',
      'C# ‚Äî –æ–±—ä–µ–∫—Ç–Ω–æ-–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —è–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è.',
      '–°—Ç–æ—Ä–æ–Ω–Ω–∏–∫–∏ C# –Ω–∞–∑—ã–≤–∞—é—Ç –µ–≥–æ —Å–∞–º—ã–º –º—É–ª—å—Ç–∏–ø–∞—Ä–∞–¥–∏–≥–º–µ–Ω–Ω—ã–º, —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–º, –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–º –∏ —É–¥–æ–±–Ω—ã–º –≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ —è–∑—ã–∫–æ–º –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è.',
      'C# ‚Äî —ç—Ç–æ —è–∑—ã–∫ —Å C-–ø–æ–¥–æ–±–Ω—ã–º —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–æ–º.',
      'PHP is a popular general-purpose scripting language that is especially suited to web development.'
    ]

    const string = strings[parseInt(Math.random() * strings.length)]

    return {
      varData: {
        string
      },
      code: `
        var string = "${string}";
      `
    }
  },
  testedCodeFunction: (varData, string) => string.find(s => s === 'JS' || s === 'JavaScript') && varData.string.match(/(JS|JavaScript)/gi).find(s => s === 'JS' || s === 'JavaScript'),
  confirm: false
}, {
  id: 25,
  emoji: 'üïì',
  description: '–ù–∞–ø–∏—à–∏—Ç–µ —É—Å–ª–æ–≤–∏—è –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å —Ñ—É–Ω–∫—Ü–∏—é —á–∞—Å–æ–≤. –î–ª—è —ç—Ç–æ–≥–æ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –ø—Ä–∏–±–∞–≤–ª–µ–Ω–∏–µ —á–∏—Å–ª–∞ <selection>s++</selection> ‚Äî –∫–æ–Ω–∫–∞—Ç–∏–Ω–∞—Ü–∏—è –∏ <selection>></selection> ‚Äî –±–æ–ª—å—à–µ. –¢–∞–∫–∂–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∏ –¥—Ä—É–≥–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ: <selection>s</selection> ‚Äî —Å–µ–∫—É–Ω–¥—ã, <selection>m</selection> ‚Äî –º–∏–Ω—É—Ç—ã –∏ <selection>h</selection> ‚Äî —á–∞—Å—ã. –ö–∞–∂–¥–æ–µ –∏–∑ —É—Å–ª–æ–≤–∏–π –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ—Ç –µ–¥–∏–Ω–∏—Ü—É –≤—Ä–µ–º–µ–Ω–∏ –∏ –ø–µ—Ä–µ–º–µ—â–∞–µ—Ç –¥—Ä—É–≥—É—é –µ–¥–∏–Ω–∏—Ü—É –Ω–∞ —à–∞–≥ –≤–ø–µ—Ä–µ–¥ –¥–æ –æ–≥—Ä–∞–Ω–∏—á–∏—Ç–µ–ª—è.',
  testedTime: 1,
  updateTime: 100,
  defaultCodeFunction: () => {
    window.consoleOff = false

    if (window._30ticker_s === undefined) {
      window._30ticker_s = 10
    }
    if (window._30ticker_m === undefined) {
      window._30ticker_m = 35
    }
    if (window._30ticker_h === undefined) {
      window._30ticker_h = 20
    }

    const s = window._30ticker_s
    const m = window._30ticker_m
    const h = window._30ticker_h

    return {
      varData: {
        s,
        m,
        h
      },
      code: `
        var s = ${s}; // –æ—Ç 0 –¥–æ 59
        var m = ${m}; // –æ—Ç 0 –¥–æ 59
        var h = ${h}; // –æ—Ç 0 –¥–æ 23
      `,
      endCode: `
        window._30ticker_s = s;
        window._30ticker_m = m;
        window._30ticker_h = h;

        try {
          window.consoleOff = true
          const nodeConsole = document.querySelector('#console')

          if (nodeConsole) {
            nodeConsole.innerHTML = \`
              <div style='width: 100%; height: 100%; display: flex; justify-content: center; align-items: center; position: relative;'>
                <img style='width: 200px; height: 200px; border-radius: 100%; position: absolute;' src='${img_time}' />
                <img  style='width: 200px; height: 200px; border-radius: 100%; position: absolute; transform: rotateZ(\${(s*6)\}deg)' src='${img_s}' />
                <img  style='width: 200px; height: 200px; border-radius: 100%; position: absolute; transform: rotateZ(\${(m*6)\}deg)' src='${img_m}' />
                <img  style='width: 200px; height: 200px; border-radius: 100%; position: absolute; transform: rotateZ(\${(h*15)\}deg)' src='${img_h}' />
                <div style='padding: 8px 10px; background: #fff; border-radius: 10px; position: absolute; top: 20px;color: #000000bd;'>\${(h => (h + '').length > 1 ? h : '0'+h)(h)}:\${(m => (m + '').length > 1 ? m : '0'+m)(m)\}:\${(s => (s + '').length > 1 ? s : '0'+s)(s)\}</div>
              </div>
            \`
          }

          window.hiddeLog(s, m, h)
        } catch (e) {}

        ;var r = ${Math.random()};
      `
    }
  },
  testedCodeFunction: (varData, _s, _m, _h) => {
    let s = varData.s
    let m = varData.m
    let h = varData.h

    s++
    if (s > 59) {
     s = 0
     m++
    }

    if (m > 59) {
     m = 0
     h++
    }

    if (h > 23) {
      h = 0
    }

    if ((window._30task_true && s < 70 && m < 70 && h < 25) || (_s === s && _m === m && _h === h && _h === 23 && m === 59 && s === 59 && s < 70 && m < 70 && h < 25)) {
      window._30task_true = true
      return true
    } else {
      return false
    }
  },
  confirm: false
}, {
  id: 25,
  emoji: 'üöÇ',
  description: '–ù–∞–ø–∏—à–∏—Ç–µ —É—Å–ª–æ–≤–∏–µ –∫–æ—Ç–æ—Ä–æ–µ –≤—ã–¥–∞—Å—Ç –±–∏–ª–µ—Ç <selection>–°–æ—á–∏ - –ö—Ä–∞—Å–Ω–æ–¥–∞—Ä - –ú–æ—Å–∫–≤–∞</selection>. –î–ª—è —ç—Ç–æ–≥–æ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä <selection>==</selection> ‚Äî —Ä–∞–≤–Ω–æ, —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å —ç–ª–µ–º–µ–Ω—Ç –∏–∑ –º–∞—Å—Å–∏–≤–∞ —Å –±–∏–ª–µ—Ç–∞–º–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ <selection>tickets[i]</selection>. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—é: <selection>console.log(tickets[i])</selection> —á—Ç–æ–±—ã –≤—ã–≤–µ—Å—Ç–∏ –≤ –∫–æ–Ω—Å–æ–ª—å.',
  testedTime: 30,
  updateTime: 1000,
  defaultCodeFunction: () => {
    if (window._31tick === undefined) {
      window._31tick = 0
    }

    const tickets = [
      '–°–æ—á–∏ - –ö—Ä–∞—Å–Ω–æ–¥–∞—Ä - –ú–æ—Å–∫–≤–∞',
      '–ê—Å—Ç—Ä–∞—Ö–∞–Ω—å - –ú–æ—Å–∫–≤–∞',
      '–°–∞—Ä–∞—Ç–æ–≤ - –†–æ—Å—Ç–æ–≤',
      '–°–æ—á–∏ - –ú–æ—Å–∫–≤–∞',
      '–°–æ—á–∏ - –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥',
      '–ü—è—Ç–∏–≥–æ—Ä—Å–∫ - –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥'
    ]

    const i = window._31tick

    return {
      varData: {
        tickets,
        i
      },
      code: `
        var tickets = [${tickets.map(ticket => '\n "'+ticket+'"').join(', ')}\n]; // –ë–∏–ª–µ—Ç—ã –Ω–∞ –ø–æ–µ–∑–¥
        var i = ${i};
      `,
      endCode: `
        if (window._31tick >= tickets.length - 1) {
          i = 0
        } else {
          i += 1;
        }
        window._31tick = i
      `
    }
  },
  testedCodeFunction: (varData, ticket) => varData.tickets[varData.i] === ticket && ticket === '–°–æ—á–∏ - –ö—Ä–∞—Å–Ω–æ–¥–∞—Ä - –ú–æ—Å–∫–≤–∞',
  confirm: false
}, {
  id: 26,
  emoji: 'üêô',
  description: '–ù–∞–ø–∏—à–∏—Ç–µ —É—Å–ª–æ–≤–∏–µ –∫–æ—Ç–æ—Ä–æ–µ —Å–æ–±–µ—Ä–µ—Ç —Ä–æ–≤–Ω–æ 10 –æ—Å—å–º–∏–Ω–æ–≥–æ–≤ <selection>üêô</selection> –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä <selection>==</selection> ‚Äî —Ä–∞–≤–µ–Ω—Å—Ç–≤–æ, <selection><=</selection> ‚Äî –º–µ–Ω—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ, –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –ø—Ä–∏–±–∞–≤–ª–µ–Ω–∏—è —Å—Ç—Ä–æ–∫–∏ <selection>octopuses += animal</selection> ‚Äî –∫–æ–Ω–∫–∞—Ç–∏–Ω–∞—Ü–∏—è –∏ –º–µ—Ç–æ–¥ <selection>length</selection> ‚Äî –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ä–∞–∑–º–µ—Ä —Å—Ç—Ä–æ–∫–∏. –í–Ω–∏–º–∞–Ω–∏–µ –∫–∞–∂–¥—ã–π –∏–∑ —Å–∏–º–≤–æ–ª–æ–≤ emoji –∑–∞–Ω–∏–º–∞–µ—Ç 2 —Å–∏–º–≤–æ–ª–∞ –≤ —Å—Ç—Ä–æ–∫–µ. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—é: <selection>console.log(octopuses)</selection> —á—Ç–æ–±—ã –≤—ã–≤–µ—Å—Ç–∏ –≤ –∫–æ–Ω—Å–æ–ª—å.',
  defaultCodeFunction: () => {
    const animals = ['üêô', 'üêô', 'üêô', 'üêà', 'üêá', 'ü¶¢', 'ü¶ú', 'üêê', 'üêì', 'üê†', 'üê≥', 'üêò', 'ü¶û', 'ü¶Ñ', 'üêç']
    const animal = animals[parseInt(Math.random() * animals.length)]

    if (window._27animal === undefined) {
      window._27animal = ""
    }

    const octopuses = window._27animal

    return {
      varData: {
        animal,
        octopuses
      },
      code: `
        var animal = "${animal}";
        var octopuses = "${octopuses}"; // ${octopuses.length} length
      `,
      endCode: `
        ;window._27animal = octopuses;
        ;${Math.random()}; // react update
      `
    }
  },
  testedCodeFunction: (varData, octopuses) => (varData.octopuses.length === 20 && varData.octopuses.split('').filter(octopus => octopus === '\uD83D').length === 10) && (octopuses.length === 20 && octopuses.split('').filter(octopus => octopus === '\uD83D').length === 10),
  confirm: false
}, {
  id: 27,
  emoji: 'üé≤',
  description: '–ù–∞–ø–∏—à–∏—Ç–µ —É—Å–ª–æ–≤–∏—è –∫–æ—Ç–æ—Ä—ã–µ –∑–∞—Å—Ç–∞–≤—è—Ç –ø—Ä–æ–≥—Ä–∞–º–º—É –≤—ã–≤–æ–¥–∏—Ç—å <selection>Fizz</selection> ‚Äî –ø—Ä–∏ —É—Å–ª–æ–≤–∏–∏ —á—Ç–æ <selection>number</selection> –¥–µ–ª–∏—Ç—å—Å—è –Ω–∞ 3 –±–µ–∑ –æ—Å—Ç–∞—Ç–∫–∞, —Ç–∞–∫–∂–µ –µ—Å–ª–∏ 5 –¥–µ–ª–∏—Ç—Å—è –±–µ–∑ –æ—Å—Ç–∞—Ç–∫–∞ –≤—ã–≤–æ–¥–∏—Ç—å –Ω—É–∂–Ω–æ <selection>Buzz</selection>, –∞ –µ—Å–ª–∏ 5 –∏ 3 –¥–µ–ª—è—Ç—Å—è –±–µ–∑ –æ—Å—Ç–∞—Ç–∫–∞ <selection>FizzBuzz</selection> –∏ –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ –∫–æ–≥–¥–∞ –∏ 5 –∏ 3 –Ω–µ –¥–µ–ª—è—Ç—Å—è –±–µ–∑ –æ—Å—Ç–∞—Ç–∫–∞ –≤—ã–≤–æ–¥–∏—Ç—å —Ç–æ–ª—å–∫–æ <selection>number</selection>. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä <selection>%</selection> ‚Äî –í–∑—è—Ç–∏–µ –æ—Å—Ç–∞—Ç–∫–∞ –æ—Ç –¥–µ–ª–µ–Ω–∏—è –∏  –æ–ø–µ—Ä–∞—Ç–æ—Ä <selection>==</selection> ‚Äî —Ä–∞–≤–µ–Ω—Å—Ç–≤–æ. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—é: <selection>console.log(output)</selection> —á—Ç–æ–±—ã –≤—ã–≤–µ—Å—Ç–∏ –≤ –∫–æ–Ω—Å–æ–ª—å.',
  defaultCodeFunction: () => {
    if (window._28fizzbuzz === undefined) {
      window._28fizzbuzz = 1
    }

    const number = window._28fizzbuzz

    return {
      varData: {
        number
      },
      code: `
        var number = ${number};
        var output = '';
      `,
      endCode: `
        ;window._28fizzbuzz += 1;
        if (window._28fizzbuzz > 100) {
          window._28fizzbuzz = 1
        }
      `
    }
  },
  testedCodeFunction: (varData, data) => {
    let output = ''

    if (varData.number % 3 === 0) {
     output += 'Fizz';
    }

    if (varData.number % 5 === 0) {
     output += 'Buzz';
    }

    if (output) {
      return output === data
    } else {
      return varData.number === data
    }
  },
  confirm: false
}, {
  id: 28,
  emoji: '‚ûï',
  description: '–ù–∞–ø–∏—à–∏—Ç–µ —É—Å–ª–æ–≤–∏–µ –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –≤—ã–≤–æ–¥–∏—Ç—å —Ç–æ–ª—å–∫–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å–ª–æ–∂–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É—è –æ–ø–µ—Ä–∞—Ç–æ—Ä <selection>==</selection> ‚Äî —Ä–∞–≤–µ–Ω—Å—Ç–≤–æ. –≠—Ç–æ—Ç –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Å–ª–æ–º–∞–Ω –∏ –∏–Ω–æ–≥–¥–∞ –≤–º–µ—Å—Ç–æ —á–∏—Å–µ–ª –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Å—Ç—Ä–æ–∫–∏ –∏—Ö –Ω—É–∂–Ω–æ –æ—Ç—Ñ–∏–ª—å—Ä–æ–≤–∞—Ç—å —Å–ø–æ–º–æ—â—å—é —Ñ—É–Ω–∫—Ü–∏—é <selection>typeof</selection> ‚Äî –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—é: <selection>console.log(a + b)</selection> —á—Ç–æ–±—ã –≤—ã–≤–µ—Å—Ç–∏ –≤ –∫–æ–Ω—Å–æ–ª—å.',
  defaultCodeFunction: () => {
    const symbols = ['+', '+', '+', '-', '/', '*', '%']
    const as = ['3wffwe34', '34222e', 'sf43', '_325g2de', '$2335%432', '$3', '>3', ...Array(40).fill(0).map((_, key) => key - 5)]
    const bs = ['eeww3', 'helloworld', 'yes1', 'l21ol', '^32', '+098', '(19673)', ...Array(40).fill(0).map((_, key) => key)]

    const symbol = symbols[parseInt(Math.random() * symbols.length)]
    const b = bs[parseInt(Math.random() * bs.length)]
    const a = as[parseInt(Math.random() * as.length)]

    return {
      varData: {
        a,
        b,
        symbol
      },
      code: `
        var a = ${typeof(a) === 'number' ? `${a}`: `"${a}"`};
        var b = ${typeof(b) === 'number' ? `${b}`: `"${b}"`};
        var symbol = "${symbol}";
      `
    }
  },
  testedCodeFunction: (varData, sum) => (typeof(varData.a) === 'number' && typeof(varData.b) === 'number') && varData.a + varData.b === sum && varData.symbol === '+',
  confirm: false
}, {
  id: 29,
  emoji: 'üöó',
  description: '–ù–∞–ø–∏—à–∏—Ç–µ —É—Å–ª–æ–≤–∏—è –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞—É—á–∞—Ç –º–∞—à–∏–Ω—É –Ω–µ –≤—Ä–µ–∑–∞—Ç—å—Å—è, —É –º–∞—à–∏–Ω—ã –Ω–µ—Ç —Ü–µ–ª–∏ –Ω–æ –µ—Å—Ç—å —Ç–æ–ª—å–∫–æ –ø—É—Ç—å, —á—Ç–æ–±—ã –ø–µ—Ä–µ–º–µ—â–∞—Ç—å—Å—è –ø–æ –¥–æ—Ä–æ–≥–µ –ø—Ä–∏—Å–≤–∏–≤–∞–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π <selection>carY</selection> –æ–¥–Ω–æ –∏–∑ –¥–≤—É—Ö –∑–Ω–∞—á–µ–Ω–∏–π <selection>0</selection> –∏–ª–∏ <selection>1</selection>, —Ç–∞–∫–∂–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä <selection>==</selection> ‚Äî —Ä–∞–≤–Ω–æ, —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å –≤ –∫–∞–∫–æ–π –º–æ–º–µ–Ω—Ç —Å–≤–µ—Ä–Ω—É—Ç—å —Å –æ–¥–Ω–æ –ø–æ–ª–æ—Å—ã –Ω–∞ –¥—Ä—É–≥—É—é. –ù–∞—á–Ω–∏—Ç–µ —Ç–µ—Å—Ç üöÄ —Å—Ä–∞–∑—É —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –±–æ–ª—å—à–µ –¥–∞–Ω–Ω—ã—Ö.',
  testedTime: 300,
  updateTime: 1000,
  defaultCodeFunction: () => {
    window.consoleOff = false

    if (window._32roadX === undefined) {
      window._32roadX = 15
    }

    if (window._32carY === undefined) {
      window._32carY = 1
    }

    const roadX = window._32roadX
    const carY = window._32carY

    return {
      varData: {
        roadX,
        carY
      },
      code: `
        var carY = ${carY}; // –æ—Ç 0 –¥–æ 1
        var roadX = ${roadX}; // –æ—Ç 15 –¥–æ 0
      `,
      endCode: `
        window.consoleOff = true

        if (roadX < 1) {
          roadX = 16
        }

        roadX -= 1

        const road = Array(16).fill(' ')

        road[roadX] = 'üöó'

        if (roadX === 11 || roadX === 8) {
          window.hiddeLog(roadX, carY, 0)
          window.hiddeLog(roadX, carY, 0)
        }

        if (roadX === 5 || roadX === 0) {
          window.hiddeLog(roadX, carY, 1)
          window.hiddeLog(roadX, carY, 1)
          window.hiddeLog(roadX, carY, 1)
        }

        try {
          window.consoleOff = true
          const nodeConsole = document.querySelector('#console')

          const symbol = s => \`<span style="position: relative; display: inline-flex; justify-content: center; align-items: center; overflow: hidden; cursor: text;"><span style="transform: scale(0.01)">\üöï</span><span style="position: absolute; width: 100%; height: 100%; display: flex; justify-content: center; align-items: center; box-sizing: border-box, z-index: 1999; font-size: \${parseInt(s).toString() !== 'NaN' ? '8px' : '15px'\}; color: \${parseInt(s).toString() !== 'NaN' ? '#ddd' : '#fff'\};">\${s\}</span></span>\`

          if (nodeConsole) {
            nodeConsole.innerHTML = \`
              <div style="position: relative; display: flex; flex-direction: column; width: 100%;">
                <div style="width: 100%;">
                  \${symbol('üöï')\}\${symbol('1')\}\${symbol('2')\}\${symbol('3')\}\${symbol('4')\}\${symbol('üöô')\}\${symbol('6')\}\${symbol('7')\}\${symbol('8')\}\${symbol('9')\}\${symbol('10')\}\${symbol('11')\}\${symbol('12')\}\${symbol('13')\}\${symbol('14')\}\${symbol('15')\}
                </div>
                <div style="width: 100%;">
                  ========================================
                </div>
                <div style="width: 100%;">
                  \${symbol('0')\}\${symbol('1')\}\${symbol('üöõ')\}\${symbol('3')\}\${symbol('4')\}\${symbol('5')\}\${symbol('6')\}\${symbol('7')\}\${symbol('üöö')\}\${symbol('9')\}\${symbol('10')\}\${symbol('üöå')\}\${symbol('12')\}\${symbol('13')\}\${symbol('14')\}\${symbol('15')\}
                </div>
                <div style="width: 100%; position: absolute; \${carY ? 'bottom: 0px;' : 'top: 0px;'\} left: 0px;">
                  \${road.map(r => symbol(r)).join('')\}
                </div>
              </div>
            \`
          }
        } catch (e) {
          console.log(e)
        }

        window._32roadX = roadX
        window._32carY = carY

        ;var r = ${Math.random()};
      `
    }
  },
  testedCodeFunction: (varData, roadX, carY, isCarY) => {
    return varData.roadX - 1 === roadX && carY === isCarY
  },
  confirm: false
}, {
  id: 30,
  emoji: 'üìÄ',
  description: '–ù–∞–ø–∏—à–∏—Ç–µ —É—Å–ª–æ–≤–∏–µ –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –ø—Ä–æ–ø—É—Å–∫–∞—Ç—å —Ç–æ–ª—å–∫–æ —Ü–≤–µ—Ç–∞ –Ω–∞–ø—Ä–∏–º–µ—Ä <selection>#ff00aa</selection> ‚Äî —Ü–≤–µ—Ç –≤ —à–µ—Å—Ç–Ω–∞–¥—Ü–∞—Ç–µ—Ä–∏—á–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ —Å—á–∏—Å–ª–µ–Ω–∏—è. –ò—Å–ø–æ–ª—å–∑—É—è –º–µ—Ç–æ–¥ <selection>match</selection> ‚Äî —Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è. –ü—Ä–∏—Å–≤–æ–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π <selection>consoleBgColor</selection> –Ω–æ—Ä–º–∞–ª—å–Ω—ã–π —Ü–≤–µ—Ç',
  defaultCodeFunction: () => {
    window.consoleOff = false

    const getRandomColor = () => {
      const symbols = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f']

      const r = () => symbols[parseInt(Math.random() * symbols.length)]

      return `#${r()}${r()}${r()}${r()}${r()}${r()}`
    }

    const colors = ['Hey, –±—ç–π–±–∏', '–±—Ä–µ–∫–µ—Ç—ã', '–∫–æ—Å–∏—á–∫–∞', '–º–∏–Ω–∏-—é–±–∫–∞', '–∫–µ–ø–∫–∞', '–≠—Ç–æ—Ç —Ç—Ä–µ–∫ –Ω–µ –¥–ª—è —Ç–≤–µ—Ä–∫–∞', '–¥–∏—Å–∫–æ—Ç–µ–∫–∞', '–î–∏—Å–∫–æ—Ç–µ–∫–∞, –¥–∏—Å–∫–æ—Ç–µ–∫–∞-–¥–∏—Å–∫–æ—Ç–µ–∫–∞', '–î–∏—Å–∫–æ—Ç–µ–∫–∞, —ç—Ç–æ –¥–∏—Å–∫–æ—Ç–µ–∫–∞ –≤–µ–∫–∞', 'Hey, –¥–∏–¥–∂–µ–π!', 'Hey, –±–∏—Ç–º–µ–π–∫–µ—Ä!', 'Hey, —É–ª–∏—á–Ω—ã–π –¥—ç–Ω—Å–µ—Ä!', '–®–∫-—à–∫, —à–µ–π–∫–µ—Ä-—à–µ–π–∫–µ—Ä!', 'Hey, –ø–∞—Ç–∏–º–µ–π–∫–µ—Ä!', 'Hey, –ø–∞—Ç–∏–º–µ–π–∫–µ—Ä!', 'Hey, –ø–∞—Ç–∏–º–µ–π–∫–µ—Ä!', 'Hey, –ø–∞—Ç–∏–º–µ–π–∫–µ—Ä!', 'Hey, –ø–∞—Ç–∏–º–µ–π–∫–µ—Ä!', '–ô–æ–≥–∏ - –Ω–æ–≥–∏ –Ω–∞ —É–≥–ª–∏', '–∑–∏–º–æ–π –Ω–∞ –Ω–æ–≥–∏ - —É–≥–∏', '–ú—ã —Ç–∞–Ω—Ü—É–µ–º –±—É–≥–∏-–≤—É–≥–∏', '–î–∏–∫–∏–π –ú–∞—É–≥–ª–∏ - –¥–∂—É–Ω–≥–ª–∏, —Å–∞–º —Å–≤–æ–∏ –≥—É–≥–ª–∏ –≤ –ì—É–≥–ª–µ', '–ú–∞—Ç—Ä–µ—à–∫–∏ - –∫—É–∫–ª—ã –≤ –∫—É–∫–ª–µ, —ç—Ç–æ—Ç –¥–µ–Ω—å - –¥—É–±–ª—å –≤ –¥—É–±–ª–µ', '–ü–æ–¥–µ–ª–∏–ª–∏—Å—å –Ω–∞ –∫–æ–º–∞–Ω–¥—ã, –ø–æ–∫–∞ –º—ã –¥—É–ª–∏-–¥—É–ª–∏', '–û–Ω–∏ –∫—Ä—É—Ç—è—Ç —Ñ–∞–∫–∏, –¥—É–ª–∏ - —Ö–∞-—Ö–∞, –æ–Ω–∏ –ø—Ä–æ–¥—É–ª–∏!', '–î–æ—Å–≤–∏–¥—É–ª–∏!', '–î–æ—Å–≤–∏–¥—É–ª–∏-–¥–æ—Å–≤–∏–¥—É–ª–∏', '–î–æ—Å–≤–∏–¥—É–ª–∏-–¥—É–ª–∏, –¥–æ—Å–≤–∏–¥—É–ª–∏-–¥—É–ª–∏', 'Hey, –¥–∏–¥–∂–µ–π!', 'Hey, –±–∏—Ç–º–µ–π–∫–µ—Ä!', 'Hey, —É–ª–∏—á–Ω—ã–π –¥—ç–Ω—Å–µ—Ä!', '–®–∫-—à–∫, —à–µ–π–∫–µ—Ä-—à–µ–π–∫–µ—Ä!', 'Hey, –ø–∞—Ç–∏–º–µ–π–∫–µ—Ä!', 'Hey, –ø–∞—Ç–∏–º–µ–π–∫–µ—Ä!', 'Hey, –ø–∞—Ç–∏–º–µ–π–∫–µ—Ä!', 'Hey, –ø–∞—Ç–∏–º–µ–π–∫–µ—Ä!', 'Hey, –ø–∞—Ç–∏–º–µ–π–∫–µ—Ä!', '–®–∫-—à–∫, —à–µ–π–∫–µ—Ä-—à–µ–π–∫–µ—Ä!', '–≠–π, –ø–∞—Ç–∏–º–µ–π–∫–µ—Ä!', 'Hey, –ø–∞—Ç–∏–º–µ–π–∫–µ—Ä!', '–≠–π, –ø–∞—Ç–∏–º–µ–π–∫–µ—Ä!', 'Hey, –ø–∞—Ç–∏–º–µ–π–∫–µ—Ä!', '–≠–π, –ø–∞—Ç–∏–º–µ–π–∫–µ—Ä!', 'Hey, –ø–∞—Ç–∏–º–µ–π–∫–µ—Ä!', '–≠–π, –ø–∞—Ç–∏–º–µ–π–∫–µ—Ä!', 'Hey, –ø–∞—Ç–∏–º–µ–π–∫–µ—Ä!', '–≠–π, –ø–∞—Ç–∏–º–µ–π–∫–µ—Ä!', 'Hey, –ø–∞—Ç–∏–º–µ–π–∫–µ—Ä!', '–≠–π, –ø–∞—Ç–∏–º–µ–π–∫–µ—Ä!', 'Hey, –ø–∞—Ç–∏–º–µ–π–∫–µ—Ä!', '–≠–π, –ø–∞—Ç–∏–º–µ–π–∫–µ—Ä!', 'Hey, –ø–∞—Ç–∏–º–µ–π–∫–µ—Ä!', '–≠–π, –ø–∞—Ç–∏–º–µ–π–∫–µ—Ä!', 'Hey, –ø–∞—Ç–∏–º–µ–π–∫–µ—Ä!', ...Array(100).fill(0).map(e => getRandomColor())]
    const color = colors[parseInt(Math.random() * colors.length)]

    return {
      varData: {
        color
      },
      code: `
        var color = "${color}";
        var consoleBgColor = '#000000bd';
      `,
      endCode: `
        try {
          window.consoleOff = true

          const nodeConsole = document.querySelector('#console')
          nodeConsole.style.background = consoleBgColor.length !== 9 ? consoleBgColor + 'bd' : consoleBgColor
          if (consoleBgColor !== '#000000bd') {
            window.hiddeLog(consoleBgColor)
            nodeConsole.innerHTML = '<img style="margin-left: -140px; margin-top: -20px;" src="https://acegif.com/wp-content/uploads/2021/4fh5wi/pepefrg-4.gif" alt="" />'
          } else {
            window.hiddeLog(consoleBgColor)
          }
        } catch (e) {
          window.hiddeLog(consoleBgColor)
        }

        ;var r = ${Math.random()};
      `
    }
  },
  testedCodeFunction: (varData, data) => (data === '#000000bd' && !varData.color.match(/#/)) || (varData.color === data && varData.color.match(/#/)),
  confirm: false
}]

const fs = require('fs')

let text = ''

tasks.forEach(({ id, description, emoji }, i) => {
  text += `
    # –ó–∞–¥–∞–Ω–∏–µ #${id} ${emoji}

    ${description.replace(/selection/gi, 'b')} [–ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ](https://prohetamine.github.io/ifpractic/?id=${id})


  `.replace(/    /gi, '')
})

fs.writeFileSync(__dirname+'/README.md', text)
